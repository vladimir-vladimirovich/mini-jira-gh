{"version":3,"sources":["components/Board/components/Task/Task.js","components/actions/common.actions.js","components/Board/components/Task/actions.js","components/Board/components/Task/index.js","components/Board/components/Taskbar/Taskbar.js","components/Board/components/Taskbar/selectors.js","components/Board/components/Taskbar/index.js","components/Board/components/Search/Search.js","components/Board/components/Search/actions.js","components/Board/components/Search/index.js","components/Board/components/Filters/Filters.js","utils/redux.util.js","components/Board/components/Filters/selectors.js","components/Board/components/Filters/actions.js","components/Board/components/Filters/index.js","components/Board/components/Sidebar/Sidebar.js","components/Board/components/Sidebar/selectors.js","components/Board/components/Sidebar/index.js","components/Board/Board.js","components/Board/actions.js","components/Board/selectors.js","dataFromServer/tasksData.js","dataFromServer/employees.js","configFromServer/taskbar.js","configFromServer/filters.js","configFromServer/task.js","utils/fakeTaskServer.util.js","components/Board/index.js","store/reducers/board.js","store/reducers/authorization.js","store/reducer.js","components/Login/styles.js","components/Login/Login.js","dataFromServer/users.js","utils/fakeAuthServer.util.js","components/Login/index.js","index.js"],"names":["Task","props","id","summary","assignee","project","img","onDragStart","onClick","className","draggable","src","alt","setSidebarVisibility","isVisible","type","payload","updateTask","properties","toggleLoggedIn","isLoggedIn","setSidebarTaskId","taskId","TaskContainer","event","dataTransfer","setData","dispatch","commonActions","actions","currentTarget","this","React","Component","enhance","connect","Taskbar","status","onDragOver","onDrop","tasksData","map","task","key","getTasks","createSelector","state","board","tasks","filter","filters","find","active","searchQuery","toLowerCase","activeFilter","includes","TaskbarContainer","preventDefault","getData","selectors","Search","onChange","target","value","placeholder","setSearchQuery","query","SearchContainer","onChangeDebounced","_","debounce","FiltersPanel","applyFilter","name","createDeepEqualSelector","createSelectorCreator","defaultMemoize","getFilters","reduxUtil","setActiveFilter","filterId","FiltersContainer","useStyles","makeStyles","theme","small","width","spacing","height","medium","large","textStyles","fontWeight","Sidebar","closeSidebar","statuses","priorities","projects","employees","handleStatusChange","handlePriorityChange","handleProjectChange","handleAssigneeChange","handleSummaryChange","handleDescriptionChange","classes","Drawer","anchor","open","onClose","Grid","container","item","xs","TextField","defaultValue","label","fullWidth","InputProps","startAdornment","InputAdornment","position","Avatar","sm","select","MenuItem","employee","priority","multiline","description","variant","getVisibilityStatus","sidebar","visible","getSidebarTask","defaultTaskData","getStatuses","tasksConfig","getPriorities","getProjects","getEmployees","SidebarContainer","avatar","_handleSummaryChange","_handleDescriptionChange","Board","columnNames","columnName","updateTaskbar","taskbarData","updateTasksConfig","updateEmployees","getColumnNames","taskbar","taskbarItem","taskbarConfig","filtersConfig","taskConfig","fakeTaskServerUtil","Promise","resolve","setTimeout","BoardContainer","init","all","getTaskbarConfig","getTasksData","getFiltersConfig","getTasksConfig","filtersData","console","error","compose","defaultState","desciption","boardReducer","action","produce","draftState","Object","assign","updateItem","forEach","payLoadFilter","authorizationReducer","combineReducers","authorization","marginBottom","paper","display","flexDirection","alignContent","justify","form","marginTop","circularProgress","marginLeft","marginRight","LoginForm","handleFieldChange","handleLoginClick","isFormDisabled","loginError","Container","component","maxWidth","CssBaseline","noValidate","Alert","severity","margin","disabled","Button","color","CircularProgress","size","users","username","password","fakeAuthServer","reject","foundUser","user","LoginFormContainer","redirect","field","toggleFormDisable","login","then","setState","catch","handleLoginClickDebounced","to","Login","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","path","exact","document","getElementById"],"mappings":"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","file":"static/js/main.534c527e.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../../css/Task.css';\r\n\r\nconst Task = (props) => {\r\n    const { id, summary, assignee, project, img, onDragStart, onClick } = props;\r\n\r\n    return (\r\n        <div\r\n            className=\"task\"\r\n            draggable=\"true\"\r\n            onDragStart={onDragStart}\r\n            onClick={onClick}\r\n            id={id}\r\n        >\r\n            <ul className=\"list\">\r\n                <li>{id}</li>\r\n                <li>{summary}</li>\r\n                <li>{assignee}</li>\r\n                <li>\r\n                    <div className=\"item-status-div\">\r\n                        <p>{project}</p>\r\n                    </div>\r\n                </li>\r\n                <li>\r\n                    <img\r\n                        className=\"image\"\r\n                        src={img}\r\n                        alt=\"\"\r\n                    />\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nTask.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    assignee: PropTypes.string.isRequired,\r\n    project: PropTypes.string.isRequired,\r\n    img: PropTypes.string,\r\n    onDragStart: PropTypes.func.isRequired,\r\n    onClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Task;","/**\r\n * @param {Object} properties\r\n */\r\nexport const setSidebarVisibility = (isVisible) => {\r\n    return {\r\n        type: 'SIDEBAR:SET_VISIBILITY',\r\n        payload: isVisible\r\n    };\r\n};\r\n\r\n/**\r\n * Update single object item in array\r\n * @param {Object} properties\r\n */\r\nexport const updateTask = (properties) => {\r\n    return {\r\n        type: 'TASKS:UPDATE_ITEM',\r\n        payload: {\r\n            ...properties\r\n        }\r\n    };\r\n};\r\n\r\n/**\r\n * @param {Boolean} isLoggedIn\r\n */\r\nexport const toggleLoggedIn = (isLoggedIn) => {\r\n    return {\r\n        type: 'AUTH:TOGGLE_IS_LOGGED_IN',\r\n        payload: isLoggedIn\r\n    };\r\n};\r\n","/**\r\n * @param {String} taskId\r\n */\r\nexport const setSidebarTaskId = (taskId) => {\r\n    return {\r\n        type: 'SIDEBAR:SET_TASKID',\r\n        payload: taskId\r\n    };\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Task from './Task';\r\nimport * as commonActions from '../../../actions/common.actions';\r\nimport * as actions from './actions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass TaskContainer extends React.Component {\r\n    onDragStart = (event) => {\r\n        event.dataTransfer.setData('taskId', this.props.id);\r\n    }\r\n\r\n    onClick = (event) => {\r\n        const { dispatch } = this.props;\r\n\r\n        dispatch(commonActions.setSidebarVisibility(true));\r\n        dispatch(actions.setSidebarTaskId(event.currentTarget.id));\r\n    }\r\n\r\n    render() {\r\n        const { id, summary, assignee, project, img } = this.props;\r\n\r\n        return (\r\n            <Task\r\n                id={id}\r\n                summary={summary}\r\n                assignee={assignee}\r\n                project={project}\r\n                img={img}\r\n                onDragStart={this.onDragStart}\r\n                onClick={this.onClick}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nTaskContainer.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    assignee: PropTypes.string.isRequired,\r\n    project: PropTypes.string.isRequired,\r\n    img: PropTypes.string,\r\n    dispatch: PropTypes.func.isRequired\r\n};\r\n\r\nconst enhance = connect();\r\n\r\nexport default enhance(TaskContainer);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TaskContainer from '../Task/index';\r\nimport '../../css/Taskbar.css';\r\n\r\nconst Taskbar = (props) => {\r\n    const { status, onDragOver, onDrop, tasksData } = props;\r\n\r\n    return (\r\n        <div className=\"taskbar\">\r\n            <div className=\"taskbar-title\">\r\n                <p>{status}</p>\r\n            </div>\r\n            <div\r\n                className=\"taskbar-list\"\r\n                onDragOver={onDragOver}\r\n                onDrop={onDrop}\r\n            >\r\n                {\r\n                    tasksData\r\n                        .map(task => (\r\n                            <TaskContainer\r\n                                key={task.id}\r\n                                id={task.id}\r\n                                summary={task.summary}\r\n                                assignee={task.assignee}\r\n                                status={task.status}\r\n                                project={task.project}\r\n                                img={task.img}\r\n                            />))\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nTaskbar.propTypes = {\r\n    status: PropTypes.string.isRequired,\r\n    onDragOver: PropTypes.func.isRequired,\r\n    onDrop: PropTypes.func.isRequired,\r\n    tasksData: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Taskbar;","import { createSelector } from 'reselect';\r\n\r\nconst getTasksMemo = (state, props) => state.board.tasks.filter((task) => task.status === props.status);\r\nconst getActiveFilterMemo = (state) => state.board.filters.find((filter) => filter.active);\r\nconst getSearchQueryMemo = (state) => state.board.searchQuery.toLowerCase();\r\n\r\nexport const getTasks = createSelector(\r\n    [\r\n        getTasksMemo,\r\n        getActiveFilterMemo,\r\n        getSearchQueryMemo\r\n    ],\r\n    (tasks, activeFilter, searchQuery) => {\r\n        if (activeFilter?.assignee) {\r\n            tasks = tasks.filter((task) => task.assignee === activeFilter.assignee);\r\n        }\r\n\r\n        if (activeFilter?.project) {\r\n            tasks = tasks.filter((task) => task.project === activeFilter.project);\r\n        }\r\n\r\n        if (searchQuery) {\r\n            tasks = tasks.filter((task) => task.summary.toLowerCase().includes(searchQuery)\r\n                || task.assignee.toLowerCase().includes(searchQuery)\r\n                || task.project.toLowerCase().includes(searchQuery)\r\n                || task.status.toLowerCase().includes(searchQuery));\r\n        }\r\n\r\n        return tasks;\r\n    }\r\n);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Taskbar from './Taskbar';\r\nimport { connect } from 'react-redux';\r\nimport * as commonActions from '../../../actions/common.actions';\r\nimport * as selectors from './selectors';\r\nimport '../../css/Taskbar.css';\r\n\r\nclass TaskbarContainer extends React.Component {\r\n    onDragOver = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    onDrop = (event) => {\r\n        const { status, dispatch } = this.props;\r\n        const taskId = event.dataTransfer.getData('taskId');\r\n\r\n        dispatch(commonActions.updateTask({ id: taskId, status }));\r\n    };\r\n\r\n    render() {\r\n        const { status, tasks } = this.props;\r\n\r\n        return (\r\n            <Taskbar\r\n                onDragOver={this.onDragOver}\r\n                onDrop={this.onDrop}\r\n                status={status}\r\n                tasksData={tasks}\r\n            />);\r\n    }\r\n}\r\n\r\nTaskbarContainer.propTypes = {\r\n    dispatch: PropTypes.func,\r\n    tasks: PropTypes.array.isRequired,\r\n    status: PropTypes.string.isRequired\r\n};\r\n\r\nconst enhance = connect(\r\n    (state, props) => ({\r\n        tasks: selectors.getTasks(state, props)\r\n    })\r\n);\r\n\r\nexport default enhance(TaskbarContainer);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../../css/Filters.css';\r\n\r\nconst Search = (props) => {\r\n    const { onChange } = props;\r\n\r\n    return (\r\n        <input\r\n            type=\"text\"\r\n            className=\"quick-search\"\r\n            onChange={(event) => onChange(event.target.value)}\r\n            placeholder=\"Search...\"\r\n        />\r\n    );\r\n};\r\n\r\nSearch.propTypes = {\r\n    onChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Search;","/**\r\n * Update single object item in array\r\n * @param {String} query\r\n */\r\nexport const setSearchQuery = (query) => {\r\n    return {\r\n        type: 'SEARCH:SET_QUERY',\r\n        payload: query\r\n    };\r\n};","import React from 'react';\r\nimport Search from './Search';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'underscore';\r\nimport * as actions from './actions';\r\nimport { connect } from 'react-redux';\r\nimport '../../css/Filters.css';\r\n\r\nclass SearchContainer extends React.Component {\r\n    onChange = (value) => {\r\n        const { dispatch } = this.props;\r\n\r\n        dispatch(actions.setSearchQuery(value));\r\n    }\r\n\r\n    onChangeDebounced = _.debounce(this.onChange, 200);\r\n\r\n    render() {\r\n        return (\r\n            <Search onChange={this.onChangeDebounced} />\r\n        );\r\n    }\r\n}\r\n\r\nSearchContainer.propTypes = {\r\n    dispatch: PropTypes.func.isRequired\r\n};\r\n\r\nconst enhance = connect();\r\n\r\nexport default enhance(SearchContainer);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SearchContainer from '../Search/index';\r\nimport '../../css/Filters.css';\r\n\r\nconst FiltersPanel = (props) => {\r\n    const { filters, applyFilter } = props;\r\n\r\n    return (\r\n        <div className=\"filtersPanel\">\r\n            <div className=\"quick-filters-container\">\r\n                <dt>\r\n                    {'QUICK FILTERS:'}\r\n                </dt>\r\n                {\r\n                    filters.map((filter) => (\r\n                        <dd key={filter.id}>\r\n                            <button\r\n                                type=\"submit\"\r\n                                id={filter.id}\r\n                                className=\"filter-button\"\r\n                                onClick={applyFilter}\r\n                            >\r\n                                {filter.name}\r\n                            </button>\r\n                        </dd>\r\n                    ))\r\n                }\r\n            </div>\r\n            <div className=\"quick-search-container\">\r\n                <SearchContainer />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nFiltersPanel.propTypes = {\r\n    filters: PropTypes.array.isRequired,\r\n    applyFilter: PropTypes.func.isRequired\r\n};\r\n\r\nexport default FiltersPanel;","import * as _ from 'underscore';\r\nimport { createSelectorCreator, defaultMemoize } from 'reselect';\r\n\r\nexport const createDeepEqualSelector = createSelectorCreator(\r\n    defaultMemoize,\r\n    _.isEqual\r\n);","import * as reduxUtil from '../../../../utils/redux.util';\r\n\r\nconst getFiltersMemo = (state) => state.board.filters;\r\n\r\nexport const getFilters = reduxUtil.createDeepEqualSelector(\r\n    [getFiltersMemo],\r\n    (filters) => filters\r\n);","\r\n/**\r\n * @param {String} filterId\r\n */\r\nexport const setActiveFilter = (filterId) => {\r\n    return {\r\n        type: 'FILTERS:SET_ACTIVE',\r\n        payload: filterId\r\n    };\r\n};","import React from 'react';\r\nimport FiltersPanel from './Filters';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport * as selectors from './selectors';\r\nimport * as actions from './actions';\r\n\r\nclass FiltersContainer extends React.Component {\r\n    applyFilter = (event) => {\r\n        event.preventDefault();\r\n\r\n        const { dispatch } = this.props;\r\n\r\n        dispatch(actions.setActiveFilter(event.target.id));\r\n    }\r\n\r\n    render() {\r\n        const { filters } = this.props;\r\n\r\n        return (\r\n            <FiltersPanel\r\n                filters={filters}\r\n                applyFilter={this.applyFilter}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nFiltersContainer.propTypes = {\r\n    dispatch: PropTypes.func,\r\n    filters: PropTypes.array.isRequired\r\n};\r\n\r\nconst enhance = connect(\r\n    (state) => ({\r\n        filters: selectors.getFilters(state)\r\n    })\r\n);\r\n\r\nexport default enhance(FiltersContainer);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport '../../css/Sidebar.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    small: {\r\n        width: theme.spacing(3),\r\n        height: theme.spacing(3)\r\n    },\r\n    medium: {\r\n        width: theme.spacing(4),\r\n        height: theme.spacing(4)\r\n    },\r\n    large: {\r\n        width: theme.spacing(7),\r\n        height: theme.spacing(7)\r\n    },\r\n    textStyles: {\r\n        fontWeight: 'bold'\r\n    }\r\n}));\r\n\r\nconst Sidebar = (props) => {\r\n    const {\r\n        closeSidebar,\r\n        isVisible,\r\n        task,\r\n        statuses,\r\n        priorities,\r\n        projects,\r\n        employees,\r\n        handleStatusChange,\r\n        handlePriorityChange,\r\n        handleProjectChange,\r\n        handleAssigneeChange,\r\n        handleSummaryChange,\r\n        handleDescriptionChange\r\n    } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Drawer anchor=\"right\" open={isVisible} onClose={closeSidebar}>\r\n                <div className=\"sidebar\">\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                id=\"standard-basic\"\r\n                                defaultValue={task.summary}\r\n                                label={task.id}\r\n                                onChange={(event) => handleSummaryChange(event.target.value, task.id)}\r\n                                fullWidth\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Avatar\r\n                                                alt=\"Remy Sharp\"\r\n                                                src=\"https://image.flaticon.com/icons/png/512/2628/2628496.png\"\r\n                                                className={classes.medium}\r\n                                            />\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                select\r\n                                value={task.status}\r\n                                onChange={(event) => handleStatusChange(event, task.id)}\r\n                                InputProps={{\r\n                                    startAdornment: <InputAdornment position=\"start\">{'Status:'}</InputAdornment>\r\n                                }}\r\n                            >\r\n                                {statuses.map((status) => (\r\n                                    <MenuItem key={status} value={status}>\r\n                                        {status}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                select\r\n                                value={task.assignee}\r\n                                onChange={(event) => handleAssigneeChange(event, task.id)}\r\n                                InputProps={{\r\n                                    startAdornment: (<InputAdornment position=\"start\">\r\n                                        {'Assignee:'}\r\n                                        <Avatar alt=\"Remy Sharp\" src={task.img} className={classes.small} />\r\n                                    </InputAdornment>)\r\n                                }}\r\n                            >\r\n                                {employees.map((employee) => (\r\n                                    <MenuItem key={employee.name} value={employee.name}>\r\n                                        {employee.name}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                select\r\n                                value={task.priority}\r\n                                onChange={(event) => handlePriorityChange(event, task.id)}\r\n                                InputProps={{\r\n                                    startAdornment: <InputAdornment position=\"start\">{'Priority:'}</InputAdornment>\r\n                                }}\r\n                            >\r\n                                {priorities.map((priority) => (\r\n                                    <MenuItem key={priority} value={priority}>\r\n                                        {priority}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                select\r\n                                value={task.project}\r\n                                onChange={(event) => handleProjectChange(event, task.id)}\r\n                                InputProps={{\r\n                                    startAdornment: <InputAdornment position=\"start\">{'Project:'}</InputAdornment>\r\n                                }}\r\n                            >\r\n                                {projects.map((project) => (\r\n                                    <MenuItem key={project} value={project}>\r\n                                        {project}\r\n                                    </MenuItem>\r\n                                ))}\r\n\r\n                            </TextField>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                id=\"outlined-multiline-static\"\r\n                                label=\"Description\"\r\n                                onChange={(event) => handleDescriptionChange(event.target.value, task.id)}\r\n                                multiline\r\n                                fullWidth\r\n                                defaultValue={task.description}\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Drawer>\r\n        </div>\r\n    );\r\n};\r\n\r\nSidebar.propTypes = {\r\n    closeSidebar: PropTypes.func.isRequired,\r\n    task: PropTypes.object.isRequired,\r\n    isVisible: PropTypes.bool.isRequired,\r\n    statuses: PropTypes.array.isRequired,\r\n    priorities: PropTypes.array.isRequired,\r\n    projects: PropTypes.array.isRequired,\r\n    employees: PropTypes.array.isRequired,\r\n    handleStatusChange: PropTypes.func.isRequired,\r\n    handlePriorityChange: PropTypes.func.isRequired,\r\n    handleProjectChange: PropTypes.func.isRequired,\r\n    handleAssigneeChange: PropTypes.func.isRequired,\r\n    handleSummaryChange: PropTypes.func.isRequired,\r\n    handleDescriptionChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Sidebar;","import * as reduxUtil from '../../../../utils/redux.util';\r\n\r\nconst getSidebarVisibilityMemo = (state) => state.board.sidebar.visible;\r\nconst getSidebarTaskMemo = (state) => {\r\n    return state.board.sidebar.taskId\r\n        ? state.board.tasks.find((task) => task.id === state.board.sidebar.taskId)\r\n        : state.board.sidebar.defaultTaskData;\r\n};\r\nconst getStatusesMemo = (state) => state.board.tasksConfig.statuses;\r\nconst getPrioritiesMemo = (state) => state.board.tasksConfig.priorities;\r\nconst getProjectsMemo = (state) => state.board.tasksConfig.projects;\r\nconst getEmployeesMemo = (state) => state.board.employees;\r\n\r\nexport const getVisibilityStatus = reduxUtil.createDeepEqualSelector(\r\n    [getSidebarVisibilityMemo],\r\n    (isVisible) => isVisible\r\n);\r\n\r\nexport const getSidebarTask = reduxUtil.createDeepEqualSelector(\r\n    [getSidebarTaskMemo],\r\n    (task) => task\r\n);\r\n\r\nexport const getStatuses = reduxUtil.createDeepEqualSelector(\r\n    [getStatusesMemo],\r\n    (statuses) => statuses\r\n);\r\n\r\nexport const getPriorities = reduxUtil.createDeepEqualSelector(\r\n    [getPrioritiesMemo],\r\n    (priorities) => priorities\r\n);\r\n\r\nexport const getProjects = reduxUtil.createDeepEqualSelector(\r\n    [getProjectsMemo],\r\n    (projects) => projects\r\n);\r\n\r\nexport const getEmployees = reduxUtil.createDeepEqualSelector(\r\n    [getEmployeesMemo],\r\n    (employee) => employee\r\n);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Sidebar from './Sidebar';\r\nimport _ from 'underscore';\r\nimport { connect } from 'react-redux';\r\nimport * as commonActions from '../../../actions/common.actions';\r\nimport * as selectors from './selectors';\r\nimport '../../css/Filters.css';\r\n\r\nclass SidebarContainer extends React.Component {\r\n    closeSidebar = () => {\r\n        const { dispatch } = this.props;\r\n\r\n        dispatch(commonActions.setSidebarVisibility(false));\r\n    }\r\n\r\n    handleStatusChange = (event, taskId) => {\r\n        const { dispatch } = this.props;\r\n\r\n        dispatch(commonActions.updateTask({ id: taskId, status: event.target.value }));\r\n    }\r\n\r\n    handlePriorityChange = (event, taskId) => {\r\n        const { dispatch } = this.props;\r\n\r\n        dispatch(commonActions.updateTask({ id: taskId, priority: event.target.value }));\r\n    }\r\n\r\n    handleProjectChange = (event, taskId) => {\r\n        const { dispatch } = this.props;\r\n\r\n        dispatch(commonActions.updateTask({ id: taskId, project: event.target.value }));\r\n    }\r\n\r\n    handleAssigneeChange = (event, taskId) => {\r\n        const { dispatch, employees } = this.props;\r\n        const assignee = employees.find((employee) => employee.name === event.target.value);\r\n\r\n        dispatch(commonActions.updateTask({\r\n            id: taskId,\r\n            assignee: event.target.value,\r\n            img: assignee.avatar\r\n        }));\r\n    }\r\n\r\n    _handleSummaryChange = (value, taskId) => {\r\n        const { dispatch } = this.props;\r\n\r\n        dispatch(commonActions.updateTask({ id: taskId, summary: value }));\r\n    }\r\n\r\n    _handleDescriptionChange = (value, taskId) => {\r\n        const { dispatch } = this.props;\r\n\r\n        dispatch(commonActions.updateTask({ id: taskId, description: value }));\r\n    };\r\n\r\n    handleSummaryChange = _.debounce(this._handleSummaryChange, 200);\r\n\r\n    handleDescriptionChange = _.debounce(this._handleDescriptionChange, 200);\r\n\r\n    render() {\r\n        const {\r\n            isVisible,\r\n            task,\r\n            statuses,\r\n            priorities,\r\n            projects,\r\n            employees\r\n        } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <Sidebar\r\n                    closeSidebar={this.closeSidebar}\r\n                    isVisible={isVisible}\r\n                    task={task}\r\n                    statuses={statuses}\r\n                    priorities={priorities}\r\n                    projects={projects}\r\n                    employees={employees}\r\n                    handleStatusChange={this.handleStatusChange}\r\n                    handlePriorityChange={this.handlePriorityChange}\r\n                    handleProjectChange={this.handleProjectChange}\r\n                    handleAssigneeChange={this.handleAssigneeChange}\r\n                    handleSummaryChange={this.handleSummaryChange}\r\n                    handleDescriptionChange={this.handleDescriptionChange}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSidebarContainer.propTypes = {\r\n    dispatch: PropTypes.func.isRequired,\r\n    isVisible: PropTypes.bool.isRequired,\r\n    task: PropTypes.object.isRequired,\r\n    statuses: PropTypes.array.isRequired,\r\n    priorities: PropTypes.array.isRequired,\r\n    projects: PropTypes.array.isRequired,\r\n    employees: PropTypes.array.isRequired\r\n};\r\n\r\nconst enhance = connect((state) => ({\r\n    isVisible: selectors.getVisibilityStatus(state),\r\n    task: selectors.getSidebarTask(state),\r\n    statuses: selectors.getStatuses(state),\r\n    priorities: selectors.getPriorities(state),\r\n    projects: selectors.getProjects(state),\r\n    employees: selectors.getEmployees(state)\r\n}));\r\n\r\nexport default enhance(SidebarContainer);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TaskbarContainer from './components/Taskbar/index';\r\nimport FiltersContainer from './components/Filters/index';\r\nimport SidebarContainer from './components/Sidebar/index';\r\nimport './css/Board.css';\r\n\r\nconst Board = (props) => {\r\n    const { columnNames } = props;\r\n\r\n    return (\r\n        <div className=\"board\">\r\n            <SidebarContainer />\r\n            <FiltersContainer />\r\n            <div className=\"board-taskbar-container\">\r\n                {\r\n                    columnNames.map((columnName) => (\r\n                        <TaskbarContainer\r\n                            key={columnName}\r\n                            status={columnName}\r\n                        />))\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nBoard.propTypes = {\r\n    columnNames: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Board;","/**\r\n * Re-write related store\r\n * @param {Array.<Object>} taskbarData\r\n */\r\nexport const updateTaskbar = (taskbarData) => {\r\n    return {\r\n        type: 'TASKBAR:UPDATE_ALL',\r\n        payload: taskbarData\r\n    };\r\n};\r\n\r\n/**\r\n * Re-write related store\r\n * @param {Array.<Object>} tasks\r\n */\r\nexport const updateTasksAll = (tasks) => {\r\n    return {\r\n        type: 'TASKS:UPDATE_ALL',\r\n        payload: tasks\r\n    };\r\n};\r\n\r\n/**\r\n * @param {Object} tasksConfig\r\n */\r\nexport const updateTasksConfig = (tasksConfig) => {\r\n    return {\r\n        type: 'TASKS:CONFIG:UPDATE',\r\n        payload: tasksConfig\r\n    };\r\n};\r\n\r\n/**\r\n * Re-write related store\r\n * @param {Array.<Object>} filters\r\n */\r\nexport const updateFilters = (filters) => {\r\n    return {\r\n        type: 'FILTERS:SET',\r\n        payload: filters\r\n    };\r\n};\r\n\r\n/**\r\n * @param {Array} employees\r\n */\r\nexport const updateEmployees = (employees) => {\r\n    return {\r\n        type: 'GLOBAL:UPDATE_EMPLOYEES',\r\n        payload: employees\r\n    };\r\n};","import * as reduxUtil from '../../utils/redux.util';\r\n\r\nconst getColumnNamesMemo = (state) => state.board.taskbar;\r\n\r\nexport const getColumnNames = reduxUtil.createDeepEqualSelector(\r\n    [getColumnNamesMemo],\r\n    (taskbar) => taskbar.map(\r\n        (taskbarItem) => taskbarItem.columnName\r\n    )\r\n);","export const tasksData = [\r\n    {\r\n        id: 'MJ-1',\r\n        summary: 'Learn React',\r\n        assignee: 'Anya',\r\n        status: 'To Do',\r\n        project: 'Education',\r\n        priority: 'High',\r\n        img: 'https://image.flaticon.com/icons/png/512/417/417776.png',\r\n        description: `1. Open JIRA MJ-1\\n`\r\n            + `2. Enter \"Education\"\\n`\r\n            + `3. Check if only education tasks are displayed\\n`\r\n            + `\\n`\r\n            + `AR: Something wrong happened\\n`\r\n            + `ER: Nothing wrong happened\\n`\r\n            + `\\n`\r\n            + `Devices:\\n`\r\n            + ` - Desktop # Win10 # Chrome\\n`\r\n            + ` - iPhone X # iOS10.3.2 # Safari`\r\n    },\r\n    {\r\n        id: 'MJ-2',\r\n        summary: 'Learn Redux',\r\n        assignee: 'Konstantin',\r\n        status: 'To Do',\r\n        project: 'Education',\r\n        priority: 'High',\r\n        img: 'https://image.flaticon.com/icons/svg/2714/2714068.svg',\r\n        description: `1. Open JIRA MJ-1\\n`\r\n            + `2. Enter \"Education\"\\n`\r\n            + `3. Check if only education tasks are displayed\\n`\r\n            + `\\n`\r\n            + `AR: Something wrong happened\\n`\r\n            + `ER: Nothing wrong happened\\n`\r\n            + `\\n`\r\n            + `Devices:\\n`\r\n            + ` - Desktop # Win10 # Chrome\\n`\r\n            + ` - iPhone X # iOS10.3.2 # Safari`\r\n    },\r\n    {\r\n        id: 'MJ-3',\r\n        summary: 'Log time',\r\n        assignee: 'Lena',\r\n        status: 'To Do',\r\n        project: 'Routine',\r\n        priority: 'Medium',\r\n        img: 'https://image.flaticon.com/icons/svg/145/145852.svg',\r\n        description: `1. Open JIRA MJ-1\\n`\r\n            + `2. Enter \"Education\"\\n`\r\n            + `3. Check if only education tasks are displayed\\n`\r\n            + `\\n`\r\n            + `AR: Something wrong happened\\n`\r\n            + `ER: Nothing wrong happened\\n`\r\n            + `\\n`\r\n            + `Devices:\\n`\r\n            + ` - Desktop # Win10 # Chrome\\n`\r\n            + ` - iPhone X # iOS10.3.2 # Safari`\r\n    },\r\n    {\r\n        id: 'MJ-4',\r\n        summary: 'Create mini-jira',\r\n        assignee: 'Max',\r\n        status: 'To Do',\r\n        project: 'Education',\r\n        priority: 'Very High',\r\n        img: 'https://image.flaticon.com/icons/svg/145/145843.svg',\r\n        description: `1. Open JIRA MJ-1\\n`\r\n            + `2. Enter \"Education\"\\n`\r\n            + `3. Check if only education tasks are displayed\\n`\r\n            + `\\n`\r\n            + `AR: Something wrong happened\\n`\r\n            + `ER: Nothing wrong happened\\n`\r\n            + `\\n`\r\n            + `Devices:\\n`\r\n            + ` - Desktop # Win10 # Chrome\\n`\r\n            + ` - iPhone X # iOS10.3.2 # Safari`\r\n    },\r\n    {\r\n        id: 'MJ-5',\r\n        summary: 'Feed the cat',\r\n        assignee: 'Katya',\r\n        status: 'To Do',\r\n        project: 'Ungreatful tasks',\r\n        priority: 'High',\r\n        img: 'https://image.flaticon.com/icons/svg/2741/2741163.svg',\r\n        description: `1. Open JIRA MJ-1\\n`\r\n            + `2. Enter \"Education\"\\n`\r\n            + `3. Check if only education tasks are displayed\\n`\r\n            + `\\n`\r\n            + `AR: Something wrong happened\\n`\r\n            + `ER: Nothing wrong happened\\n`\r\n            + `\\n`\r\n            + `Devices:\\n`\r\n            + ` - Desktop # Win10 # Chrome\\n`\r\n            + ` - iPhone X # iOS10.3.2 # Safari`\r\n    },\r\n    {\r\n        id: 'MJ-6',\r\n        summary: 'Play games',\r\n        assignee: 'Eugene',\r\n        status: 'To Do',\r\n        project: 'Recreation',\r\n        priority: 'Low',\r\n        img: 'https://image.flaticon.com/icons/svg/2741/2741111.svg',\r\n        description: `1. Open JIRA MJ-1\\n`\r\n            + `2. Enter \"Education\"\\n`\r\n            + `3. Check if only education tasks are displayed\\n`\r\n            + `\\n`\r\n            + `AR: Something wrong happened\\n`\r\n            + `ER: Nothing wrong happened\\n`\r\n            + `\\n`\r\n            + `Devices:\\n`\r\n            + ` - Desktop # Win10 # Chrome\\n`\r\n            + ` - iPhone X # iOS10.3.2 # Safari`\r\n    },\r\n    {\r\n        id: 'MJ-7',\r\n        summary: 'Do sport',\r\n        assignee: 'Another Anya',\r\n        status: 'To Do',\r\n        project: 'Health',\r\n        priority: 'Medium',\r\n        img: 'https://image.flaticon.com/icons/svg/163/163802.svg',\r\n        description: `1. Open JIRA MJ-1\\n`\r\n            + `2. Enter \"Education\"\\n`\r\n            + `3. Check if only education tasks are displayed\\n`\r\n            + `\\n`\r\n            + `AR: Something wrong happened\\n`\r\n            + `ER: Nothing wrong happened\\n`\r\n            + `\\n`\r\n            + `Devices:\\n`\r\n            + ` - Desktop # Win10 # Chrome\\n`\r\n            + ` - iPhone X # iOS10.3.2 # Safari`\r\n    },\r\n    {\r\n        id: 'MJ-8',\r\n        summary: 'Cook',\r\n        assignee: 'Dima',\r\n        status: 'To Do',\r\n        project: 'Routine',\r\n        priority: 'Low',\r\n        img: 'https://image.flaticon.com/icons/svg/163/163804.svg',\r\n        description: `1. Open JIRA MJ-1\\n`\r\n            + `2. Enter \"Education\"\\n`\r\n            + `3. Check if only education tasks are displayed\\n`\r\n            + `\\n`\r\n            + `AR: Something wrong happened\\n`\r\n            + `ER: Nothing wrong happened\\n`\r\n            + `\\n`\r\n            + `Devices:\\n`\r\n            + ` - Desktop # Win10 # Chrome\\n`\r\n            + ` - iPhone X # iOS10.3.2 # Safari`\r\n    }\r\n];","export const employees = [\r\n    {\r\n        name: 'Anya',\r\n        avatar: 'https://image.flaticon.com/icons/png/512/417/417776.png'\r\n    },\r\n    {\r\n        name: 'Konstantin',\r\n        avatar: 'https://image.flaticon.com/icons/svg/2714/2714068.svg'\r\n    },\r\n    {\r\n        name: 'Lena',\r\n        avatar: 'https://image.flaticon.com/icons/svg/145/145852.svg'\r\n    },\r\n    {\r\n        name: 'Max',\r\n        avatar: 'https://image.flaticon.com/icons/svg/145/145843.svg'\r\n    },\r\n    {\r\n        name: 'Katya',\r\n        avatar: 'https://image.flaticon.com/icons/svg/2741/2741163.svg'\r\n    },\r\n    {\r\n        name: 'Eugene',\r\n        avatar: 'https://image.flaticon.com/icons/svg/2741/2741111.svg'\r\n    },\r\n    {\r\n        name: 'Another Anya',\r\n        avatar: 'https://image.flaticon.com/icons/svg/163/163802.svg'\r\n    },\r\n    {\r\n        name: 'Dima',\r\n        avatar: 'https://image.flaticon.com/icons/svg/163/163804.svg'\r\n    }\r\n];","export const taskbarConfig = [\r\n    {\r\n        columnName: 'To Do'\r\n    },\r\n    {\r\n        columnName: 'In Progress'\r\n    },\r\n    {\r\n        columnName: 'Ready For Testing'\r\n    },\r\n    {\r\n        columnName: 'Completed'\r\n    }\r\n];","export const filtersConfig = [\r\n    {\r\n        id: 'all-filter',\r\n        name: 'All',\r\n        project: '',\r\n        assignee: '',\r\n        summary: ''\r\n    },\r\n    {\r\n        id: 'education-filter',\r\n        name: 'Education',\r\n        project: 'Education',\r\n        assignee: '',\r\n        summary: ''\r\n    },\r\n    {\r\n        id: 'routine-filter',\r\n        name: 'Routine',\r\n        project: 'Routine',\r\n        assignee: '',\r\n        summary: ''\r\n    },\r\n    {\r\n        id: 'recreation-filter',\r\n        name: 'Recreation',\r\n        project: 'Recreation',\r\n        assignee: '',\r\n        summary: ''\r\n    }\r\n];","export const taskConfig = {\r\n    statuses: ['To Do', 'In Progress', 'Ready For Testing', 'Completed'],\r\n    priorities: ['Blocker', 'Very High', 'High', 'Medium', 'Low', 'Not Prioritized'],\r\n    projects: ['Education', 'Ungreatful tasks', 'Recreation', 'Health', 'Routine']\r\n};","import { tasksData } from '../dataFromServer/tasksData';\r\nimport { employees } from '../dataFromServer/employees';\r\nimport { taskbarConfig } from '../configFromServer/taskbar';\r\nimport { filtersConfig } from '../configFromServer/filters';\r\nimport { taskConfig } from '../configFromServer/task';\r\n\r\n// Class developed in order to emulate async server calls\r\nclass FakeTaskServerUtil {\r\n    constructor() {\r\n        this.tasksData = tasksData;\r\n        this.taskbarConfig = taskbarConfig;\r\n        this.filtersConfig = filtersConfig;\r\n        this.taskConfig = taskConfig;\r\n        this.employees = employees;\r\n    }\r\n\r\n    getTasksData() {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(this.tasksData);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    getTaskbarConfig() {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(this.taskbarConfig);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    getFiltersConfig() {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(this.filtersConfig);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    getTasksConfig() {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(this.taskConfig);\r\n            }, 2000);\r\n        });\r\n    }\r\n\r\n    getEmployees() {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(this.employees);\r\n            }, 2000);\r\n        });\r\n    }\r\n}\r\n\r\nexport const fakeTaskServerUtil = new FakeTaskServerUtil();","import React from 'react';\r\nimport Board from './Board';\r\nimport PropTypes from 'prop-types';\r\nimport * as actions from './actions';\r\nimport * as selectors from './selectors';\r\nimport { fakeTaskServerUtil } from '../../utils/fakeTaskServer.util';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\n\r\nclass BoardContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.init();\r\n    }\r\n\r\n    async init() {\r\n        const { dispatch } = this.props;\r\n\r\n        try {\r\n            const [\r\n                taskbarData,\r\n                tasksData,\r\n                filtersData,\r\n                tasksConfig,\r\n                employees\r\n            ] = await Promise.all([\r\n                fakeTaskServerUtil.getTaskbarConfig(),\r\n                fakeTaskServerUtil.getTasksData(),\r\n                fakeTaskServerUtil.getFiltersConfig(),\r\n                fakeTaskServerUtil.getTasksConfig(),\r\n                fakeTaskServerUtil.getEmployees()\r\n            ]);\r\n\r\n            dispatch(actions.updateTaskbar(taskbarData));\r\n            dispatch(actions.updateTasksAll(tasksData));\r\n            dispatch(actions.updateFilters(filtersData));\r\n            dispatch(actions.updateTasksConfig(tasksConfig));\r\n            dispatch(actions.updateEmployees(employees));\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { columnNames } = this.props;\r\n\r\n        return (\r\n            <Board columnNames={columnNames} />\r\n        );\r\n    }\r\n}\r\n\r\nBoardContainer.propTypes = {\r\n    dispatch: PropTypes.func,\r\n    columnNames: PropTypes.array.isRequired\r\n};\r\n\r\nconst enhance = compose(\r\n    connect(\r\n        (state) => ({\r\n            columnNames: selectors.getColumnNames(state)\r\n        })\r\n    )\r\n);\r\n\r\nexport default enhance(BoardContainer);","import { produce } from 'immer';\r\n\r\nconst defaultState = {\r\n    taskbar: [],\r\n    tasks: [],\r\n    filters: [],\r\n    searchQuery: '',\r\n    employees: [],\r\n    tasksConfig: {\r\n        statuses: [],\r\n        priorities: [],\r\n        projects: []\r\n    },\r\n    sidebar: {\r\n        visible: false,\r\n        taskId: '',\r\n        defaultTaskData: {\r\n            id: '',\r\n            summary: '',\r\n            assignee: '',\r\n            status: '',\r\n            project: '',\r\n            img: '',\r\n            desciption: ''\r\n        }\r\n    }\r\n};\r\n\r\nconst boardReducer = (state = defaultState, action) => produce(state, (draftState) => {\r\n    switch (action.type) {\r\n        case 'TASKBAR:UPDATE_ALL': {\r\n            Object.assign(draftState, {\r\n                taskbar: action.payload\r\n            });\r\n\r\n            break;\r\n        }\r\n        case 'TASKS:UPDATE_ALL': {\r\n            Object.assign(draftState, {\r\n                tasks: action.payload\r\n            });\r\n\r\n            break;\r\n        }\r\n        case 'TASKS:UPDATE_ITEM': {\r\n            const updateItem = draftState.tasks.find((task) => task.id === action.payload.id);\r\n\r\n            Object.assign(updateItem, action.payload);\r\n\r\n            break;\r\n        }\r\n        case 'TASKS:UPDATE_ITEM_STATUS': {\r\n            const updateItem = draftState.tasks.find((task) => task.id === action.payload.id);\r\n\r\n            Object.assign(updateItem, {\r\n                ...updateItem,\r\n                status: action.payload.status\r\n            });\r\n\r\n            break;\r\n        }\r\n        case 'TASKS:CONFIG:UPDATE': {\r\n            draftState.tasksConfig = action.payload;\r\n\r\n            break;\r\n        }\r\n        case 'FILTERS:SET': {\r\n            action.payload.forEach((filter) => {\r\n                filter.active = false;\r\n            });\r\n            Object.assign(draftState, {\r\n                filters: action.payload\r\n            });\r\n\r\n            break;\r\n        }\r\n        case 'FILTERS:SET_ACTIVE': {\r\n            const payLoadFilter = draftState.filters.find((filter) => filter.id === action.payload);\r\n\r\n            draftState.filters.forEach((filter) => {\r\n                filter.active = false;\r\n            });\r\n            payLoadFilter.active = true;\r\n\r\n            break;\r\n        }\r\n        case 'SEARCH:SET_QUERY': {\r\n            draftState.searchQuery = action.payload;\r\n\r\n            break;\r\n        }\r\n        case 'SIDEBAR:SET_VISIBILITY': {\r\n            draftState.sidebar.visible = action.payload;\r\n\r\n            break;\r\n        }\r\n        case 'SIDEBAR:SET_TASKID': {\r\n            draftState.sidebar.taskId = action.payload;\r\n\r\n            break;\r\n        }\r\n        case 'GLOBAL:UPDATE_EMPLOYEES': {\r\n            draftState.employees = action.payload;\r\n\r\n            break;\r\n        }\r\n    }\r\n});\r\n\r\nexport default boardReducer;","import { produce } from 'immer';\r\n\r\nconst defaultState = {\r\n    isLoggedIn: false\r\n};\r\n\r\nconst authorizationReducer = (state = defaultState, action) => produce(state, (draftState) => {\r\n    switch (action.type) {\r\n        case 'AUTH:TOGGLE_IS_LOGGED_IN': {\r\n            draftState.isLoggedIn = action.payload;\r\n\r\n            break;\r\n        }\r\n    }\r\n});\r\n\r\nexport default authorizationReducer;","import { combineReducers } from 'redux';\r\n\r\nimport board from './reducers/board';\r\nimport authorization from './reducers/authorization';\r\n\r\nexport default combineReducers({\r\n    board,\r\n    authorization\r\n});\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        marginBottom: theme.spacing(30)\r\n    },\r\n    paper: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignContent: 'center',\r\n        justify: 'center'\r\n    },\r\n    form: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    circularProgress: {\r\n        marginLeft: 0,\r\n        marginRight: theme.spacing(0.5)\r\n    }\r\n}));\r\n\r\nexport default useStyles;","import React from 'react';\r\nimport useStyles from './styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\n\r\nimport './styles.css';\r\n\r\nconst LoginForm = (props) => {\r\n    const {\r\n        handleFieldChange,\r\n        handleLoginClick,\r\n        isFormDisabled,\r\n        loginError\r\n    } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <Container component=\"div\" maxWidth=\"xs\" className={classes.container}>\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <form noValidate>\r\n                        {loginError && <Alert variant=\"filled\" severity=\"error\">\r\n                            {loginError}\r\n                        </Alert>}\r\n                        <TextField\r\n                            id=\"username\"\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            disabled={isFormDisabled}\r\n                            label=\"Username\"\r\n                            className={classes.form}\r\n                            onChange={(event) => {\r\n                                event.preventDefault();\r\n                                handleFieldChange(event.target.value, event.target.id);\r\n                            }}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <PersonIcon />\r\n                                    </InputAdornment>\r\n                                )\r\n                            }}\r\n                        />\r\n                        <TextField\r\n                            id=\"password\"\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            disabled={isFormDisabled}\r\n                            onChange={(event) => {\r\n                                event.preventDefault();\r\n                                handleFieldChange(event.target.value, event.target.id);\r\n                            }}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <VpnKeyIcon />\r\n                                    </InputAdornment>\r\n                                )\r\n                            }}\r\n                        />\r\n                        <Button\r\n                            display=\"none\"\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.form}\r\n                            disabled={isFormDisabled}\r\n                            onClick={(event) => {\r\n                                event.preventDefault();\r\n                                handleLoginClick();\r\n                            }}\r\n                        >\r\n                            {isFormDisabled && <CircularProgress size={20} className={classes.circularProgress} />}\r\n                            {'Sign In'}\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nLoginForm.propTypes = {\r\n    handleFieldChange: PropTypes.func.isRequired,\r\n    handleLoginClick: PropTypes.func.isRequired,\r\n    isFormDisabled: PropTypes.bool.isRequired,\r\n    loginError: PropTypes.string\r\n};\r\n\r\nexport default LoginForm;","export const users = [\r\n    {\r\n        id: '0',\r\n        username: 'test',\r\n        password: 'test'\r\n    },\r\n    {\r\n        id: '1',\r\n        username: 'Anya',\r\n        password: 'Qwer1234'\r\n    },\r\n    {\r\n        id: '2',\r\n        username: 'Konstantin',\r\n        password: 'Qwer1234'\r\n    },\r\n    {\r\n        id: '3',\r\n        username: 'Lena',\r\n        password: 'Qwer1234'\r\n    },\r\n    {\r\n        id: '4',\r\n        username: 'Max',\r\n        password: 'Qwer1234'\r\n    },\r\n    {\r\n        id: '5',\r\n        username: 'Katya',\r\n        password: 'Qwer1234'\r\n    },\r\n    {\r\n        id: '6',\r\n        username: 'Eugene',\r\n        password: 'Qwer1234'\r\n    },\r\n    {\r\n        id: '7',\r\n        username: 'Anya.Another',\r\n        password: 'Qwer1234'\r\n    },\r\n    {\r\n        id: '8',\r\n        username: 'Dima',\r\n        password: 'Qwer1234'\r\n    }\r\n];","import { users } from '../dataFromServer/users';\r\n\r\n// Class developed in order to emulate async server calls\r\nclass FakeAuthServer {\r\n    login(username, password) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                const foundUser = users.find((user) => user.username === username && user.password === password);\r\n                foundUser ? resolve(foundUser) : reject('User not found');\r\n            }, 3000);\r\n        });\r\n    }\r\n}\r\n\r\nexport const fakeAuthServer = new FakeAuthServer();","import React from 'react';\r\nimport LoginForm from './Login';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'underscore';\r\nimport * as commonActions from '../actions/common.actions';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { fakeAuthServer } from '../../utils/fakeAuthServer.util';\r\n\r\nclass LoginFormContainer extends React.Component {\r\n    username = '';\r\n\r\n    password = '';\r\n\r\n    state = {\r\n        isFormDisabled: false,\r\n        redirect: null,\r\n        loginError: null\r\n    };\r\n\r\n    handleFieldChange = (value, field) => {\r\n        this[field] = value;\r\n    }\r\n\r\n    handleLoginClick = () => {\r\n        const { dispatch } = this.props;\r\n\r\n        this.toggleFormDisable(true);\r\n        fakeAuthServer.login(this.username, this.password)\r\n            .then(() => {\r\n                dispatch(commonActions.toggleLoggedIn(true));\r\n                this.toggleFormDisable(false);\r\n                this.setState({ redirect: '/mini-jira-gh/board' });\r\n            })\r\n            .catch((error) => {\r\n                this.toggleFormDisable(false);\r\n                this.setState({ loginError: error });\r\n            });\r\n    }\r\n\r\n    handleLoginClickDebounced = _.debounce(this.handleLoginClick, 100);\r\n\r\n    toggleFormDisable = (isFormDisabled) => {\r\n        this.setState({ isFormDisabled });\r\n    }\r\n\r\n    render() {\r\n        const { redirect, isFormDisabled, loginError } = this.state;\r\n\r\n        if (redirect) {\r\n            return <Redirect to={this.state.redirect} />;\r\n        }\r\n\r\n        return (\r\n            <LoginForm\r\n                handleFieldChange={this.handleFieldChange}\r\n                handleLoginClick={this.handleLoginClickDebounced}\r\n                isFormDisabled={isFormDisabled}\r\n                loginError={loginError}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nLoginFormContainer.propTypes = {\r\n    dispatch: PropTypes.func\r\n};\r\n\r\nconst enhance = connect();\r\n\r\nexport default enhance(LoginFormContainer);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport BoardContainer from './components/Board/index';\r\nimport combineReducers from './store/reducer';\r\nimport LoginFormContainer from './components/Login/index';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport './index.css';\r\n\r\nconst store = createStore(\r\n    combineReducers,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Router>\r\n            <Switch>\r\n                <Route path=\"/mini-jira-gh/\" exact component={LoginFormContainer} />\r\n                <Route path=\"/mini-jira-gh/login\" exact component={LoginFormContainer} />\r\n                <Route path=\"/mini-jira-gh/board\" exact component={BoardContainer} />\r\n            </Switch>\r\n        </Router>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}