{"version":3,"sources":["components/Board/components/Task/Task.js","components/Board/commonActions.js","components/Board/components/Task/actions.js","data/tasksData.js","config/taskbar.js","config/filters.js","utils/fakeServer.util.js","components/Board/components/Task/index.js","components/Board/components/Taskbar/Taskbar.js","components/Board/components/Taskbar/actions.js","components/Board/components/Taskbar/selectors.js","components/Board/components/Taskbar/index.js","components/Board/components/Search/Search.js","components/Board/components/Search/actions.js","components/Board/components/Search/index.js","components/Board/components/Filters/Filters.js","utils/redux.util.js","components/Board/components/Filters/selectors.js","components/Board/components/Filters/actions.js","components/Board/components/Filters/index.js","components/Board/components/Sidebar/Sidebar.js","components/Board/components/Sidebar/selectors.js","components/Board/components/Sidebar/index.js","components/Board/Board.js","components/Board/actions.js","components/Board/selectors.js","components/Board/index.js","components/Board/reducers/board.js","index.js"],"names":["Task","props","id","summary","assignee","project","img","onDragStart","onClick","className","draggable","src","alt","setSidebarVisibility","isVisible","type","payload","setSidebarTask","taskId","setTaskData","taskData","setLoading","loading","tasksData","status","description","taskbarConfig","columnName","filtersConfig","name","fakeServerUtil","this","Promise","resolve","setTimeout","reject","find","task","TaskContainer","event","dataTransfer","setData","dispatch","commonActions","actions","currentTarget","getTaskData","then","React","Component","enhance","connect","Taskbar","onDragOver","onDrop","map","key","updateTask","properties","getTasks","createSelector","state","tasks","filter","filters","active","searchQuery","toLowerCase","activeFilter","includes","TaskbarContainer","preventDefault","getData","selectors","Search","onChange","target","value","placeholder","setSearchQuery","query","SearchContainer","onChangeDebounced","_","debounce","FiltersPanel","applyFilter","createDeepEqualSelector","createSelectorCreator","defaultMemoize","getFilters","reduxUtil","setActiveFilter","filterId","FiltersContainer","Sidebar","closeSidebar","isOpened","isLoading","Drawer","anchor","open","onClose","getSidebarStatus","sidebar","visible","getSidebarTaskData","getSidebarLoading","SidebarContainer","Board","columnNames","updateTaskbar","taskbarData","getColumnNames","taskbar","taskbarItem","BoardContainer","updateTasks","updateFilters","getTaskbarConfig","getTasksData","getFiltersConfig","filtersData","compose","defaultState","desciption","boardReducer","action","produce","draftState","Object","assign","updateItem","forEach","payLoadFilter","boardStore","createStore","boardReducers","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.beeef5e7.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../../css/Task.css';\r\n\r\nconst Task = (props) => {\r\n    const { id, summary, assignee, project, img, onDragStart, onClick } = props;\r\n\r\n    return (\r\n        <div\r\n            className=\"task\"\r\n            draggable=\"true\"\r\n            onDragStart={onDragStart}\r\n            onClick={onClick}\r\n            id={id}\r\n        >\r\n            <ul className=\"list\">\r\n                <li>{id}</li>\r\n                <li>{summary}</li>\r\n                <li>{assignee}</li>\r\n                <li>\r\n                    <div className=\"item-status-div\">\r\n                        <p>{project}</p>\r\n                    </div>\r\n                </li>\r\n                <li>\r\n                    <img\r\n                        className=\"image\"\r\n                        src={img}\r\n                        alt=\"\"\r\n                    />\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nTask.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    assignee: PropTypes.string.isRequired,\r\n    project: PropTypes.string.isRequired,\r\n    img: PropTypes.string,\r\n    onDragStart: PropTypes.func.isRequired,\r\n    onClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Task;","/**\r\n * @param {Object} properties\r\n */\r\nexport const setSidebarVisibility = (isVisible) => {\r\n    return {\r\n        type: 'SIDEBAR:SET_VISIBILITY',\r\n        payload: isVisible\r\n    };\r\n};","/**\r\n * @param {String} taskId\r\n */\r\nexport const setSidebarTask = (taskId) => {\r\n    return {\r\n        type: 'SIDEBAR:SET_TASKID',\r\n        payload: taskId\r\n    };\r\n};\r\n\r\n/**\r\n * @param {Object} taskData\r\n */\r\nexport const setTaskData = (taskData) => {\r\n    return {\r\n        type: 'SIDEBAR:SET_TASK_DATA',\r\n        payload: taskData\r\n    };\r\n};\r\n\r\n/**\r\n * @param {Boolean} loading\r\n */\r\nexport const setLoading = (loading) => {\r\n    return {\r\n        type: 'SIDEBAR:SET_LOADING',\r\n        payload: loading\r\n    };\r\n};","export const tasksData = [\r\n    {\r\n        id: 'MJ-1',\r\n        summary: 'Learn React',\r\n        assignee: 'None',\r\n        status: 'To Do',\r\n        project: 'Education',\r\n        img: 'https://image.flaticon.com/icons/svg/2731/2731461.svg',\r\n        description: `1. Open JIRA MJ-1`\r\n            + `2. Enter \"Education\"`\r\n            + `3. Check if only education tasks are displayed`\r\n    },\r\n    {\r\n        id: 'MJ-2',\r\n        summary: 'Learn Redux',\r\n        assignee: 'Konstantin',\r\n        status: 'To Do',\r\n        project: 'Education',\r\n        img: 'https://image.flaticon.com/icons/svg/2714/2714068.svg',\r\n        description: `1. Open JIRA MJ-2`\r\n            + `2. Enter \"Education\"`\r\n            + `3. Check if only education tasks are displayed`\r\n    },\r\n    {\r\n        id: 'MJ-3',\r\n        summary: 'Log time',\r\n        assignee: 'Diana',\r\n        status: 'To Do',\r\n        project: 'Routine',\r\n        img: 'https://image.flaticon.com/icons/svg/145/145852.svg',\r\n        description: `1. Open JIRA MJ-3`\r\n            + `2. Enter \"Education\"`\r\n            + `3. Check if only education tasks are displayed`\r\n    },\r\n    {\r\n        id: 'MJ-4',\r\n        summary: 'Create mini-jira',\r\n        assignee: 'Artem',\r\n        status: 'To Do',\r\n        project: 'Education',\r\n        img: 'https://image.flaticon.com/icons/svg/145/145843.svg',\r\n        description: `1. Open JIRA MJ-4`\r\n            + `2. Enter \"Education\"`\r\n            + `3. Check if only education tasks are displayed`\r\n    },\r\n    {\r\n        id: 'MJ-5',\r\n        summary: 'Feed the cat',\r\n        assignee: 'Julia',\r\n        status: 'To Do',\r\n        project: 'Ungreatful tasks',\r\n        img: 'https://image.flaticon.com/icons/svg/2741/2741163.svg',\r\n        description: `1. Open JIRA MJ-5`\r\n            + `2. Enter \"Education\"`\r\n            + `3. Check if only education tasks are displayed`\r\n    },\r\n    {\r\n        id: 'MJ-6',\r\n        summary: 'Play games',\r\n        assignee: 'Eugene',\r\n        status: 'To Do',\r\n        project: 'Recreation',\r\n        img: 'https://image.flaticon.com/icons/svg/2741/2741111.svg',\r\n        description: `1. Open JIRA MJ-6`\r\n            + `2. Enter \"Education\"`\r\n            + `3. Check if only education tasks are displayed`\r\n    },\r\n    {\r\n        id: 'MJ-7',\r\n        summary: 'Do sport',\r\n        assignee: 'Lera',\r\n        status: 'To Do',\r\n        project: 'Health',\r\n        img: 'https://image.flaticon.com/icons/svg/163/163802.svg',\r\n        description: `1. Open JIRA MJ-7`\r\n            + `2. Enter \"Education\"`\r\n            + `3. Check if only education tasks are displayed`\r\n    },\r\n    {\r\n        id: 'MJ-8',\r\n        summary: 'Cook',\r\n        assignee: 'Yuri',\r\n        status: 'To Do',\r\n        project: 'Routine',\r\n        img: 'https://image.flaticon.com/icons/svg/163/163804.svg',\r\n        description: `1. Open JIRA MJ-8`\r\n            + `2. Enter \"Education\"`\r\n            + `3. Check if only education tasks are displayed`\r\n    }\r\n];","export const taskbarConfig = [\r\n    {\r\n        columnName: 'To Do'\r\n    },\r\n    {\r\n        columnName: 'In Progress'\r\n    },\r\n    {\r\n        columnName: 'Ready for testing'\r\n    },\r\n    {\r\n        columnName: 'Completed'\r\n    }\r\n];","export const filtersConfig = [\r\n    {\r\n        id: 'all-filter',\r\n        name: 'All',\r\n        project: '',\r\n        assignee: '',\r\n        summary: ''\r\n    },\r\n    {\r\n        id: 'education-filter',\r\n        name: 'Education',\r\n        project: 'Education',\r\n        assignee: '',\r\n        summary: ''\r\n    },\r\n    {\r\n        id: 'routine-filter',\r\n        name: 'Routine',\r\n        project: 'Routine',\r\n        assignee: '',\r\n        summary: ''\r\n    },\r\n    {\r\n        id: 'recreation-filter',\r\n        name: 'Recreation',\r\n        project: 'Recreation',\r\n        assignee: '',\r\n        summary: ''\r\n    }\r\n];","import { tasksData } from '../data/tasksData';\r\nimport { taskbarConfig } from '../config/taskbar';\r\nimport { filtersConfig } from '../config/filters';\r\n\r\n// Class developed in order to emulate async server calls\r\nclass FakeServerUtil {\r\n    constructor() {\r\n        this.tasksData = tasksData;\r\n        this.taskbarConfig = taskbarConfig;\r\n        this.filtersConfig = filtersConfig;\r\n    }\r\n\r\n    getTasksData() {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(this.tasksData);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    getTaskData(taskId) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                taskId\r\n                    ? resolve(this.tasksData.find((task) => task.id === taskId))\r\n                    : reject(null);\r\n            }, 4000);\r\n        });\r\n    }\r\n\r\n    getTaskbarConfig() {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(this.taskbarConfig);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    getFiltersConfig() {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(this.filtersConfig);\r\n            }, 100);\r\n        });\r\n    }\r\n}\r\n\r\nexport const fakeServerUtil = new FakeServerUtil();","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Task from './Task';\r\nimport * as commonActions from '../../commonActions';\r\nimport * as actions from './actions';\r\nimport { connect } from 'react-redux';\r\nimport { fakeServerUtil } from '../../../../utils/fakeServer.util';\r\n\r\nclass TaskContainer extends React.Component {\r\n    onDragStart = (event) => {\r\n        event.dataTransfer.setData('taskId', this.props.id);\r\n    }\r\n\r\n    onClick = (event) => {\r\n        const { dispatch } = this.props;\r\n\r\n        dispatch(commonActions.setSidebarVisibility(true));\r\n        dispatch(actions.setSidebarTask(event.currentTarget.id));\r\n\r\n        dispatch(actions.setLoading(true));\r\n        fakeServerUtil.getTaskData(event.currentTarget.id)\r\n            .then(taskData => {\r\n                dispatch(actions.setTaskData(taskData));\r\n                dispatch(actions.setLoading(false));\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const { id, summary, assignee, project, img } = this.props;\r\n\r\n        return (\r\n            <Task\r\n                id={id}\r\n                summary={summary}\r\n                assignee={assignee}\r\n                project={project}\r\n                img={img}\r\n                onDragStart={this.onDragStart}\r\n                onClick={this.onClick}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nTaskContainer.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    assignee: PropTypes.string.isRequired,\r\n    project: PropTypes.string.isRequired,\r\n    img: PropTypes.string,\r\n    dispatch: PropTypes.func.isRequired\r\n};\r\n\r\nconst enhance = connect();\r\n\r\nexport default enhance(TaskContainer);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TaskContainer from '../Task/index';\r\nimport '../../css/Taskbar.css';\r\n\r\nconst Taskbar = (props) => {\r\n    const { status, onDragOver, onDrop, tasksData } = props;\r\n\r\n    return (\r\n        <div className=\"taskbar\">\r\n            <div className=\"taskbar-title\">\r\n                <p>{status}</p>\r\n            </div>\r\n            <div\r\n                className=\"taskbar-list\"\r\n                onDragOver={onDragOver}\r\n                onDrop={onDrop}\r\n            >\r\n                {\r\n                    tasksData\r\n                        .map(task => (\r\n                            <TaskContainer\r\n                                key={task.id}\r\n                                id={task.id}\r\n                                summary={task.summary}\r\n                                assignee={task.assignee}\r\n                                status={task.status}\r\n                                project={task.project}\r\n                                img={task.img}\r\n                            />))\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nTaskbar.propTypes = {\r\n    status: PropTypes.string.isRequired,\r\n    onDragOver: PropTypes.func.isRequired,\r\n    onDrop: PropTypes.func.isRequired,\r\n    tasksData: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Taskbar;","/**\r\n * Update single object item in array\r\n * @param {Object} properties\r\n */\r\nexport const updateTask = (properties) => {\r\n    return {\r\n        type: 'TASKS:UPDATE_ITEM',\r\n        payload: {\r\n            ...properties\r\n        }\r\n    };\r\n};","import { createSelector } from 'reselect';\r\n\r\nconst getTasksMemo = (state, props) => state.tasks.filter((task) => task.status === props.status);\r\nconst getActiveFilterMemo = (state) => state.filters.find((filter) => filter.active);\r\nconst getSearchQueryMemo = (state) => state.searchQuery.toLowerCase();\r\n\r\nexport const getTasks = createSelector(\r\n    [\r\n        getTasksMemo,\r\n        getActiveFilterMemo,\r\n        getSearchQueryMemo\r\n    ],\r\n    (tasks, activeFilter, searchQuery) => {\r\n        if (activeFilter?.assignee) {\r\n            tasks = tasks.filter((task) => task.assignee === activeFilter.assignee);\r\n        }\r\n\r\n        if (activeFilter?.project) {\r\n            tasks = tasks.filter((task) => task.project === activeFilter.project);\r\n        }\r\n\r\n        if (searchQuery) {\r\n            tasks = tasks.filter((task) => task.summary.toLowerCase().includes(searchQuery)\r\n                || task.assignee.toLowerCase().includes(searchQuery)\r\n                || task.project.toLowerCase().includes(searchQuery)\r\n                || task.status.toLowerCase().includes(searchQuery));\r\n        }\r\n\r\n        return tasks;\r\n    }\r\n);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Taskbar from './Taskbar';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from './actions';\r\nimport * as selectors from './selectors';\r\nimport '../../css/Taskbar.css';\r\n\r\nclass TaskbarContainer extends React.Component {\r\n    onDragOver = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    onDrop = (event) => {\r\n        const { status, dispatch } = this.props;\r\n        const taskId = event.dataTransfer.getData('taskId');\r\n\r\n        dispatch(actions.updateTask({ id: taskId, status }));\r\n    };\r\n\r\n    render() {\r\n        const { status, tasks } = this.props;\r\n\r\n        return (\r\n            <Taskbar\r\n                onDragOver={this.onDragOver}\r\n                onDrop={this.onDrop}\r\n                status={status}\r\n                tasksData={tasks}\r\n            />);\r\n    }\r\n}\r\n\r\nTaskbarContainer.propTypes = {\r\n    dispatch: PropTypes.func,\r\n    tasks: PropTypes.array.isRequired,\r\n    status: PropTypes.string.isRequired\r\n};\r\n\r\nconst enhance = connect(\r\n    (state, props) => ({\r\n        tasks: selectors.getTasks(state, props)\r\n    })\r\n);\r\n\r\nexport default enhance(TaskbarContainer);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../../css/Filters.css';\r\n\r\nconst Search = (props) => {\r\n    const { onChange } = props;\r\n\r\n    return (\r\n        <input type=\"text\" className=\"quick-search\" onChange={(event) => onChange(event.target.value)} placeholder=\"Search...\" />\r\n    );\r\n};\r\n\r\nSearch.propTypes = {\r\n    onChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Search;","/**\r\n * Update single object item in array\r\n * @param {String} query\r\n */\r\nexport const setSearchQuery = (query) => {\r\n    return {\r\n        type: 'SEARCH:SET_QUERY',\r\n        payload: query\r\n    };\r\n};","import React from 'react';\r\nimport Search from './Search';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'underscore';\r\nimport * as actions from './actions';\r\nimport { connect } from 'react-redux';\r\nimport '../../css/Filters.css';\r\n\r\nclass SearchContainer extends React.Component {\r\n    onChange = (value) => {\r\n        const { dispatch } = this.props;\r\n\r\n        dispatch(actions.setSearchQuery(value));\r\n    }\r\n\r\n    onChangeDebounced = _.debounce(this.onChange, 200);\r\n\r\n    render() {\r\n        return (\r\n            <Search onChange={this.onChangeDebounced} />\r\n        );\r\n    }\r\n}\r\n\r\nSearchContainer.propTypes = {\r\n    dispatch: PropTypes.func.isRequired\r\n};\r\n\r\nconst enhance = connect();\r\n\r\nexport default enhance(SearchContainer);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../../css/Filters.css';\r\nimport SearchContainer from '../Search/index';\r\n\r\nconst FiltersPanel = (props) => {\r\n    const { filters, applyFilter } = props;\r\n\r\n    return (\r\n        <div className=\"filtersPanel\">\r\n            <div className=\"quick-filters-container\">\r\n                <dt>\r\n                    {'QUICK FILTERS:'}\r\n                </dt>\r\n                {\r\n                    filters.map((filter) => (\r\n                        <dd key={filter.id}>\r\n                            <button\r\n                                type=\"submit\"\r\n                                id={filter.id}\r\n                                className=\"filter-button\"\r\n                                onClick={applyFilter}\r\n                            >\r\n                                {filter.name}\r\n                            </button>\r\n                        </dd>\r\n                    ))\r\n                }\r\n            </div>\r\n            <div className=\"quick-search-container\">\r\n                <SearchContainer />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nFiltersPanel.propTypes = {\r\n    filters: PropTypes.array.isRequired,\r\n    applyFilter: PropTypes.func.isRequired\r\n};\r\n\r\nexport default FiltersPanel;","import * as _ from 'underscore';\r\nimport { createSelectorCreator, defaultMemoize } from 'reselect';\r\n\r\nexport const createDeepEqualSelector = createSelectorCreator(\r\n    defaultMemoize,\r\n    _.isEqual\r\n);","import * as reduxUtil from '../../../../utils/redux.util';\r\n\r\nconst getFiltersMemo = (state) => state.filters;\r\n\r\nexport const getFilters = reduxUtil.createDeepEqualSelector(\r\n    [getFiltersMemo],\r\n    (filters) => filters\r\n);","\r\n/**\r\n * @param {String} filterId\r\n */\r\nexport const setActiveFilter = (filterId) => {\r\n    return {\r\n        type: 'FILTERS:SET_ACTIVE',\r\n        payload: filterId\r\n    };\r\n};","import React from 'react';\r\nimport FiltersPanel from './Filters';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport * as selectors from './selectors';\r\nimport * as actions from './actions';\r\n\r\nclass FiltersContainer extends React.Component {\r\n    applyFilter = (event) => {\r\n        event.preventDefault();\r\n\r\n        const { dispatch } = this.props;\r\n\r\n        dispatch(actions.setActiveFilter(event.target.id));\r\n    }\r\n\r\n    render() {\r\n        const { filters } = this.props;\r\n\r\n        return (\r\n            <FiltersPanel\r\n                filters={filters}\r\n                applyFilter={this.applyFilter}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nFiltersContainer.propTypes = {\r\n    dispatch: PropTypes.func,\r\n    filters: PropTypes.array.isRequired\r\n};\r\n\r\nconst enhance = connect(\r\n    (state) => ({\r\n        filters: selectors.getFilters(state)\r\n    })\r\n);\r\n\r\nexport default enhance(FiltersContainer);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport '../../css/Filters.css';\r\n\r\nconst Sidebar = (props) => {\r\n    const { closeSidebar, isOpened, taskData, isLoading } = props;\r\n\r\n    return (\r\n        <div>\r\n            <Drawer anchor=\"right\" open={isOpened} onClose={closeSidebar}>\r\n                <div>\r\n                    {isLoading\r\n                        ? 'LOADING ... ... !!!1'\r\n                        : `Description: ${taskData.description}`}\r\n                </div>\r\n            </Drawer>\r\n        </div>\r\n    );\r\n};\r\n\r\nSidebar.propTypes = {\r\n    closeSidebar: PropTypes.func.isRequired,\r\n    isOpened: PropTypes.bool.isRequired,\r\n    taskData: PropTypes.object.isRequired,\r\n    isLoading: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default Sidebar;","import * as reduxUtil from '../../../../utils/redux.util';\r\n\r\nconst getSidebarStatusMemo = (state) => state.sidebar.visible;\r\nconst getSidebarTaskIdMemo = (state) => state.sidebar.taskId;\r\nconst getSidebarTaskDataMemo = (state) => state.sidebar.taskData;\r\nconst getSidebarLoadingMemo = (state) => state.sidebar.loading;\r\n\r\nexport const getSidebarStatus = reduxUtil.createDeepEqualSelector(\r\n    [getSidebarStatusMemo],\r\n    (isOpened) => isOpened\r\n);\r\n\r\nexport const getSidebarTask = reduxUtil.createDeepEqualSelector(\r\n    [getSidebarTaskIdMemo],\r\n    (taskId) => taskId\r\n);\r\n\r\nexport const getSidebarTaskData = reduxUtil.createDeepEqualSelector(\r\n    [getSidebarTaskDataMemo],\r\n    (taskData) => taskData\r\n);\r\n\r\nexport const getSidebarLoading = reduxUtil.createDeepEqualSelector(\r\n    [getSidebarLoadingMemo],\r\n    (loading) => loading\r\n);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Sidebar from './Sidebar';\r\nimport { connect } from 'react-redux';\r\nimport * as commonActions from '../../commonActions';\r\nimport * as selectors from './selectors';\r\nimport '../../css/Filters.css';\r\n\r\nclass SidebarContainer extends React.Component {\r\n    closeSidebar = () => {\r\n        const { dispatch } = this.props;\r\n\r\n        dispatch(commonActions.setSidebarVisibility(false));\r\n    }\r\n\r\n    render() {\r\n        const { isLoading, isOpened, taskData } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <Sidebar\r\n                    closeSidebar={this.closeSidebar}\r\n                    isOpened={isOpened}\r\n                    isLoading={isLoading}\r\n                    taskData={taskData}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSidebarContainer.propTypes = {\r\n    dispatch: PropTypes.func.isRequired,\r\n    isOpened: PropTypes.bool.isRequired,\r\n    taskData: PropTypes.object,\r\n    isLoading: PropTypes.bool.isRequired\r\n};\r\n\r\nconst enhance = connect((state) => ({\r\n    isOpened: selectors.getSidebarStatus(state),\r\n    taskData: selectors.getSidebarTaskData(state),\r\n    isLoading: selectors.getSidebarLoading(state)\r\n}));\r\n\r\nexport default enhance(SidebarContainer);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TaskbarContainer from './components/Taskbar/index';\r\nimport './css/Board.css';\r\nimport FiltersContainer from './components/Filters/index';\r\nimport SidebarContainer from './components/Sidebar/index';\r\n\r\nconst Board = (props) => {\r\n    const { columnNames } = props;\r\n\r\n    return (\r\n        <div className=\"board\">\r\n            <SidebarContainer />\r\n            <FiltersContainer />\r\n            <div className=\"board-taskbar-container\">\r\n                {\r\n                    columnNames.map((columnName) => (\r\n                        <TaskbarContainer\r\n                            key={columnName}\r\n                            status={columnName}\r\n                        />))\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nBoard.propTypes = {\r\n    columnNames: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Board;","/**\r\n * Re-write related store\r\n * @param {Array.<Object>} taskbarData\r\n */\r\nexport const updateTaskbar = (taskbarData) => {\r\n    return {\r\n        type: 'TASKBAR:UPDATE_ALL',\r\n        payload: taskbarData\r\n    };\r\n};\r\n\r\n/**\r\n * Re-write related store\r\n * @param {Array.<Object>} tasks\r\n */\r\nexport const updateTasksAll = (tasks) => {\r\n    return {\r\n        type: 'TASKS:UPDATE_ALL',\r\n        payload: tasks\r\n    };\r\n};\r\n\r\n/**\r\n * Re-write related store\r\n * @param {Array.<Object>} filters\r\n */\r\nexport const updateFilters = (filters) => {\r\n    return {\r\n        type: 'FILTERS:SET',\r\n        payload: filters\r\n    };\r\n};","import * as reduxUtil from '../../utils/redux.util';\r\n\r\nconst getColumnNamesMemo = (state) => state.taskbar;\r\n\r\nexport const getColumnNames = reduxUtil.createDeepEqualSelector(\r\n    [getColumnNamesMemo],\r\n    (taskbar) => taskbar.map(\r\n        (taskbarItem) => taskbarItem.columnName\r\n    )\r\n);","import React from 'react';\r\nimport Board from './Board';\r\nimport PropTypes from 'prop-types';\r\nimport * as actions from './actions';\r\nimport * as selectors from './selectors';\r\nimport { fakeServerUtil } from '../../utils/fakeServer.util';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\n\r\nclass BoardContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.updateTaskbar();\r\n        this.updateTasks();\r\n        this.updateFilters();\r\n    }\r\n\r\n    async updateTaskbar() {\r\n        const { dispatch } = this.props;\r\n        const taskbarData = await fakeServerUtil.getTaskbarConfig();\r\n\r\n        dispatch(actions.updateTaskbar(taskbarData));\r\n    }\r\n\r\n    async updateTasks() {\r\n        const { dispatch } = this.props;\r\n        const tasksData = await fakeServerUtil.getTasksData();\r\n\r\n        dispatch(actions.updateTasksAll(tasksData));\r\n    }\r\n\r\n    async updateFilters() {\r\n        const { dispatch } = this.props;\r\n        const filtersData = await fakeServerUtil.getFiltersConfig();\r\n\r\n        dispatch(actions.updateFilters(filtersData));\r\n    }\r\n\r\n    render() {\r\n        const { columnNames } = this.props;\r\n\r\n        return (\r\n            <Board columnNames={columnNames} />\r\n        );\r\n    }\r\n}\r\n\r\nBoardContainer.propTypes = {\r\n    dispatch: PropTypes.func,\r\n    columnNames: PropTypes.array.isRequired\r\n};\r\n\r\nconst enhance = compose(\r\n    connect(\r\n        (state) => ({\r\n            columnNames: selectors.getColumnNames(state)\r\n        })\r\n    )\r\n);\r\n\r\nexport default enhance(BoardContainer);","import { produce } from 'immer';\r\n\r\nconst defaultState = {\r\n    taskbar: [],\r\n    tasks: [],\r\n    filters: [],\r\n    searchQuery: '',\r\n    sidebar: {\r\n        visible: false,\r\n        taskId: '',\r\n        loading: true,\r\n        taskData: {\r\n            id: '',\r\n            summary: '',\r\n            assignee: '',\r\n            status: '',\r\n            project: '',\r\n            img: '',\r\n            desciption: ''\r\n        }\r\n    }\r\n};\r\n\r\nconst boardReducer = (state = defaultState, action) => produce(state, (draftState) => {\r\n    switch (action.type) {\r\n        case 'TASKBAR:UPDATE_ALL': {\r\n            Object.assign(draftState, {\r\n                taskbar: action.payload\r\n            });\r\n\r\n            break;\r\n        }\r\n        case 'TASKS:UPDATE_ALL': {\r\n            Object.assign(draftState, {\r\n                tasks: action.payload\r\n            });\r\n\r\n            break;\r\n        }\r\n        case 'TASKS:UPDATE_ITEM': {\r\n            const updateItem = draftState.tasks.find((task) => task.id === action.payload.id);\r\n\r\n            Object.assign(updateItem, action.payload);\r\n\r\n            break;\r\n        }\r\n        case 'FILTERS:SET': {\r\n            action.payload.forEach((filter) => {\r\n                filter.active = false;\r\n            });\r\n            Object.assign(draftState, {\r\n                filters: action.payload\r\n            });\r\n\r\n            break;\r\n        }\r\n        case 'FILTERS:SET_ACTIVE': {\r\n            const payLoadFilter = draftState.filters.find((filter) => filter.id === action.payload);\r\n\r\n            draftState.filters.forEach((filter) => {\r\n                filter.active = false;\r\n            });\r\n            payLoadFilter.active = true;\r\n\r\n            break;\r\n        }\r\n        case 'SEARCH:SET_QUERY': {\r\n            draftState.searchQuery = action.payload;\r\n\r\n            break;\r\n        }\r\n        case 'SIDEBAR:SET_VISIBILITY': {\r\n            draftState.sidebar.visible = action.payload;\r\n\r\n            break;\r\n        }\r\n        case 'SIDEBAR:SET_TASKID': {\r\n            draftState.sidebar.taskId = action.payload;\r\n\r\n            break;\r\n        }\r\n        case 'SIDEBAR:SET_LOADING': {\r\n            draftState.sidebar.loading = action.payload;\r\n\r\n            break;\r\n        }\r\n        case 'SIDEBAR:SET_TASK_DATA': {\r\n            draftState.sidebar.taskData = action.payload;\r\n\r\n            break;\r\n        }\r\n    }\r\n});\r\n\r\nexport default boardReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport BoardContainer from './components/Board/index';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport boardReducers from './components/Board/reducers/board';\r\n\r\nconst boardStore = createStore(\r\n    boardReducers,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nReactDOM.render(\r\n    <Provider store={boardStore}>\r\n        <BoardContainer />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}