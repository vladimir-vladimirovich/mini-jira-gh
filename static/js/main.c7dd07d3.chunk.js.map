{"version":3,"sources":["contexts/TasksContext.js","components/Task.js","components/Taskbar.js","data/tasksData.js","config/taskbarConfig.js","utils/fakeServer.util.js","components/Board.js","index.js"],"names":["TasksContext","createContext","Task","props","className","draggable","onDragStart","event","id","dataTransfer","setData","summary","assignee","project","src","img","alt","Taskbar","useContext","tasks","setTasks","status","onDragOver","preventDefault","onDrop","getData","updatedTasks","map","task","key","tasksData","taskbarConfig","columnStatus","fakeServerUtil","this","Promise","resolve","setTimeout","Board","useState","taskbarData","setTaskbarData","a","getTasksData","newTasks","getTasks","getTaskbarConfig","newTaskbarData","getTaskbarData","Provider","value","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c7dd07d3.chunk.js","sourcesContent":["import {createContext} from 'react';\r\n\r\nexport const TasksContext = createContext([]);","import React from 'react';\r\nimport '../components-styles/Task.css';\r\n\r\nconst Task = (props) => {\r\n    const onDragStart = (event, id) => {\r\n        event.dataTransfer.setData('taskId', id);\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className=\"task\"\r\n            draggable=\"true\"\r\n            onDragStart={(event) => onDragStart(event, props.id)}\r\n        >\r\n            <ul className=\"list\">\r\n                <li>{props.id}</li>\r\n                <li>{props.summary}</li>\r\n                <li>{props.assignee}</li>\r\n                <li>\r\n                    <div className=\"item-status-div\">\r\n                        <p>{props.project}</p>\r\n                    </div>\r\n                </li>\r\n                <li>\r\n                    <img\r\n                        className=\"image\"\r\n                        src={props.img}\r\n                        alt=''\r\n                    />\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task;","import React, { useContext } from 'react';\r\nimport { TasksContext } from '../contexts/TasksContext';\r\nimport Task from './Task';\r\nimport '../components-styles/Taskbar.css';\r\n\r\nexport const Taskbar = (props) => {\r\n    const { tasks, setTasks } = useContext(TasksContext);\r\n\r\n    const onDragOver = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const onDrop = (event, status) => {\r\n        const id = event.dataTransfer.getData('taskId');\r\n        const updatedTasks = tasks.map(task => {\r\n            if (task.id === id) {\r\n                task.status = status;\r\n                return task\r\n            } else return task\r\n        });\r\n        setTasks(updatedTasks);\r\n    };\r\n\r\n    return (\r\n        <div className=\"taskbar\">\r\n            <div className=\"taskbar-title\">\r\n                <p>{props.status}</p>\r\n            </div>\r\n            <div\r\n                className=\"taskbar-list\"\r\n                onDragOver={onDragOver}\r\n                onDrop={(event) => onDrop(event, props.status)}\r\n            >\r\n                {tasks.map((task) => {\r\n                    if (task.status === props.status) {\r\n                        return (\r\n                            <Task\r\n                                key={task.id}\r\n                                id={task.id}\r\n                                summary={task.summary}\r\n                                assignee={task.assignee}\r\n                                status={task.status}\r\n                                project={task.project}\r\n                                img={task.img}\r\n                            />\r\n                        )\r\n                    }\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}","export const tasksData = [\r\n    {\r\n        id: 'MJ-1',\r\n        summary: 'Learn React',\r\n        assignee: 'None',\r\n        status: 'To Do',\r\n        project: 'Education',\r\n        img: 'https://image.flaticon.com/icons/svg/2731/2731461.svg'\r\n    },\r\n    {\r\n        id: 'MJ-2',\r\n        summary: 'Learn Redux',\r\n        assignee: 'Konstantin',\r\n        status: 'To Do',\r\n        project: 'Education',\r\n        img: 'https://image.flaticon.com/icons/svg/2714/2714068.svg'\r\n    },\r\n    {\r\n        id: 'MJ-3',\r\n        summary: 'Log time',\r\n        assignee: 'Diana',\r\n        status: 'To Do',\r\n        project: 'Routine',\r\n        img: 'https://image.flaticon.com/icons/svg/145/145852.svg'\r\n    },\r\n    {\r\n        id: 'MJ-4',\r\n        summary: 'Create mini-jira',\r\n        assignee: 'Artem',\r\n        status: 'To Do',\r\n        project: 'Education',\r\n        img: 'https://image.flaticon.com/icons/svg/145/145843.svg'\r\n    },\r\n    {\r\n        id: 'MJ-5',\r\n        summary: 'Feed the cat',\r\n        assignee: 'Julia',\r\n        status: 'To Do',\r\n        project: 'Ungreatful tasks',\r\n        img: 'https://image.flaticon.com/icons/svg/2741/2741163.svg'\r\n    },\r\n    {\r\n        id: 'MJ-6',\r\n        summary: 'Play games',\r\n        assignee: 'Eugene',\r\n        status: 'To Do',\r\n        project: 'Recreation',\r\n        img: 'https://image.flaticon.com/icons/svg/2741/2741111.svg'\r\n    },\r\n    {\r\n        id: 'MJ-7',\r\n        summary: 'Do sport',\r\n        assignee: 'Lera',\r\n        status: 'To Do',\r\n        project: 'Health',\r\n        img: 'https://image.flaticon.com/icons/svg/163/163802.svg'\r\n    },\r\n    {\r\n        id: 'MJ-8',\r\n        summary: 'Cook',\r\n        assignee: 'Yuri',\r\n        status: 'To Do',\r\n        project: 'Routine',\r\n        img: 'https://image.flaticon.com/icons/svg/163/163804.svg'\r\n    }\r\n];","export const taskbarConfig = [\r\n    {\r\n        columnStatus: \"To Do\"\r\n    },\r\n    {\r\n        columnStatus: \"In Progress\"\r\n    },\r\n    {\r\n        columnStatus: \"Ready for testing\"\r\n    },\r\n    {\r\n        columnStatus: \"Completed\"\r\n    }\r\n]","import { tasksData } from '../data/tasksData';\r\nimport { taskbarConfig } from '../config/taskbarConfig';\r\n\r\nclass FakeServerUtil {\r\n    constructor() {\r\n        this.tasksData = tasksData;\r\n        this.taskbarConfig = taskbarConfig;\r\n    };\r\n\r\n    // In order to emulate request/response\r\n    async getTasksData() {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(this.tasksData);\r\n            }, 4500);\r\n        })\r\n    };\r\n\r\n    // In order to emulate request/response\r\n    async getTaskbarConfig() {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(this.taskbarConfig);\r\n            }, 2500);\r\n        })\r\n    };\r\n}\r\n\r\nexport const fakeServerUtil = new FakeServerUtil();\r\n","import React, { useState } from 'react';\r\nimport { Taskbar } from './Taskbar';\r\nimport { TasksContext } from '../contexts/TasksContext';\r\nimport '../components-styles/Board.css';\r\n\r\nimport { fakeServerUtil } from '../utils/fakeServer.util';\r\n\r\nexport const Board = () => {\r\n    const [tasks, setTasks] = useState([]);\r\n    const [taskbarData, setTaskbarData] = useState([]);\r\n\r\n    // Async tasks fetch \r\n    const getTasks = async () => {\r\n        const newTasks = await fakeServerUtil.getTasksData();\r\n        setTasks(newTasks);\r\n    };\r\n    getTasks();\r\n\r\n    // Async columns fetch \r\n    const getTaskbarData = async () => {\r\n        const newTaskbarData = await fakeServerUtil.getTaskbarConfig();\r\n        setTaskbarData(newTaskbarData);\r\n    }\r\n    getTaskbarData();\r\n\r\n    return (\r\n        <div className=\"board\">\r\n            <div className=\"board-taskbar-container\">\r\n                <TasksContext.Provider value={{ tasks, setTasks }}>\r\n                    {taskbarData.map((item) => {\r\n                        return (\r\n                            <Taskbar\r\n                                key={item.columnStatus}\r\n                                status={item.columnStatus}\r\n                            />\r\n                        )\r\n                    })}\r\n                </TasksContext.Provider>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Board } from './components/Board';\n\nReactDOM.render(\n  <Board />,\n  document.getElementById('root')\n);"],"sourceRoot":""}