{"version":3,"sources":["components/Board/components/Task/Task.js","components/Board/commonActions.js","components/Board/components/Task/actions.js","components/Board/components/Task/index.js","components/Board/components/Taskbar/Taskbar.js","components/Board/components/Taskbar/actions.js","components/Board/components/Taskbar/selectors.js","components/Board/components/Taskbar/index.js","components/Board/components/Search/Search.js","components/Board/components/Search/actions.js","components/Board/components/Search/index.js","components/Board/components/Filters/Filters.js","utils/redux.util.js","components/Board/components/Filters/selectors.js","components/Board/components/Filters/actions.js","components/Board/components/Filters/index.js","components/Board/components/Sidebar/Sidebar.js","components/Board/components/Sidebar/selectors.js","components/Board/components/Sidebar/index.js","components/Board/Board.js","components/Board/actions.js","components/Board/selectors.js","data/tasksData.js","config/taskbar.js","config/filters.js","utils/fakeServer.util.js","components/Board/index.js","components/Board/reducers/board.js","index.js"],"names":["Task","props","id","summary","assignee","project","img","onDragStart","onClick","className","draggable","src","alt","setSidebarVisibility","isVisible","type","payload","setSidebarTaskId","taskId","TaskContainer","event","dataTransfer","setData","dispatch","commonActions","actions","currentTarget","this","React","Component","enhance","connect","Taskbar","status","onDragOver","onDrop","tasksData","map","task","key","updateTask","properties","getTasks","createSelector","state","tasks","filter","filters","find","active","searchQuery","toLowerCase","activeFilter","includes","TaskbarContainer","preventDefault","getData","selectors","Search","onChange","target","value","placeholder","setSearchQuery","query","SearchContainer","onChangeDebounced","_","debounce","FiltersPanel","applyFilter","name","createDeepEqualSelector","createSelectorCreator","defaultMemoize","getFilters","reduxUtil","setActiveFilter","filterId","FiltersContainer","useStyles","makeStyles","theme","small","width","spacing","height","medium","large","Sidebar","closeSidebar","classes","Drawer","anchor","open","onClose","Grid","container","item","xs","TextField","defaultValue","label","fullWidth","InputProps","startAdornment","InputAdornment","position","Avatar","sm","disabled","priority","multiline","description","variant","getVisibilityStatus","sidebar","visible","getSidebarLoading","loading","getSidebarTask","defaultTaskData","SidebarContainer","isLoading","Board","columnNames","columnName","updateTaskbar","taskbarData","getColumnNames","taskbar","taskbarItem","taskbarConfig","filtersConfig","fakeServerUtil","Promise","resolve","setTimeout","reject","BoardContainer","updateTasks","updateFilters","getTaskbarConfig","getTasksData","getFiltersConfig","filtersData","compose","defaultState","desciption","boardReducer","action","produce","draftState","Object","assign","updateItem","forEach","payLoadFilter","boardStore","createStore","boardReducers","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.003187e2.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../../css/Task.css';\r\n\r\nconst Task = (props) => {\r\n    const { id, summary, assignee, project, img, onDragStart, onClick } = props;\r\n\r\n    return (\r\n        <div\r\n            className=\"task\"\r\n            draggable=\"true\"\r\n            onDragStart={onDragStart}\r\n            onClick={onClick}\r\n            id={id}\r\n        >\r\n            <ul className=\"list\">\r\n                <li>{id}</li>\r\n                <li>{summary}</li>\r\n                <li>{assignee}</li>\r\n                <li>\r\n                    <div className=\"item-status-div\">\r\n                        <p>{project}</p>\r\n                    </div>\r\n                </li>\r\n                <li>\r\n                    <img\r\n                        className=\"image\"\r\n                        src={img}\r\n                        alt=\"\"\r\n                    />\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nTask.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    assignee: PropTypes.string.isRequired,\r\n    project: PropTypes.string.isRequired,\r\n    img: PropTypes.string,\r\n    onDragStart: PropTypes.func.isRequired,\r\n    onClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Task;","/**\r\n * @param {Object} properties\r\n */\r\nexport const setSidebarVisibility = (isVisible) => {\r\n    return {\r\n        type: 'SIDEBAR:SET_VISIBILITY',\r\n        payload: isVisible\r\n    };\r\n};","/**\r\n * @param {String} taskId\r\n */\r\nexport const setSidebarTaskId = (taskId) => {\r\n    return {\r\n        type: 'SIDEBAR:SET_TASKID',\r\n        payload: taskId\r\n    };\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Task from './Task';\r\nimport * as commonActions from '../../commonActions';\r\nimport * as actions from './actions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass TaskContainer extends React.Component {\r\n    onDragStart = (event) => {\r\n        event.dataTransfer.setData('taskId', this.props.id);\r\n    }\r\n\r\n    onClick = (event) => {\r\n        const { dispatch } = this.props;\r\n\r\n        dispatch(commonActions.setSidebarVisibility(true));\r\n        dispatch(actions.setSidebarTaskId(event.currentTarget.id));\r\n    }\r\n\r\n    render() {\r\n        const { id, summary, assignee, project, img } = this.props;\r\n\r\n        return (\r\n            <Task\r\n                id={id}\r\n                summary={summary}\r\n                assignee={assignee}\r\n                project={project}\r\n                img={img}\r\n                onDragStart={this.onDragStart}\r\n                onClick={this.onClick}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nTaskContainer.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    assignee: PropTypes.string.isRequired,\r\n    project: PropTypes.string.isRequired,\r\n    img: PropTypes.string,\r\n    dispatch: PropTypes.func.isRequired\r\n};\r\n\r\nconst enhance = connect();\r\n\r\nexport default enhance(TaskContainer);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TaskContainer from '../Task/index';\r\nimport '../../css/Taskbar.css';\r\n\r\nconst Taskbar = (props) => {\r\n    const { status, onDragOver, onDrop, tasksData } = props;\r\n\r\n    return (\r\n        <div className=\"taskbar\">\r\n            <div className=\"taskbar-title\">\r\n                <p>{status}</p>\r\n            </div>\r\n            <div\r\n                className=\"taskbar-list\"\r\n                onDragOver={onDragOver}\r\n                onDrop={onDrop}\r\n            >\r\n                {\r\n                    tasksData\r\n                        .map(task => (\r\n                            <TaskContainer\r\n                                key={task.id}\r\n                                id={task.id}\r\n                                summary={task.summary}\r\n                                assignee={task.assignee}\r\n                                status={task.status}\r\n                                project={task.project}\r\n                                img={task.img}\r\n                            />))\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nTaskbar.propTypes = {\r\n    status: PropTypes.string.isRequired,\r\n    onDragOver: PropTypes.func.isRequired,\r\n    onDrop: PropTypes.func.isRequired,\r\n    tasksData: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Taskbar;","/**\r\n * Update single object item in array\r\n * @param {Object} properties\r\n */\r\nexport const updateTask = (properties) => {\r\n    return {\r\n        type: 'TASKS:UPDATE_ITEM',\r\n        payload: {\r\n            ...properties\r\n        }\r\n    };\r\n};","import { createSelector } from 'reselect';\r\n\r\nconst getTasksMemo = (state, props) => state.tasks.filter((task) => task.status === props.status);\r\nconst getActiveFilterMemo = (state) => state.filters.find((filter) => filter.active);\r\nconst getSearchQueryMemo = (state) => state.searchQuery.toLowerCase();\r\n\r\nexport const getTasks = createSelector(\r\n    [\r\n        getTasksMemo,\r\n        getActiveFilterMemo,\r\n        getSearchQueryMemo\r\n    ],\r\n    (tasks, activeFilter, searchQuery) => {\r\n        if (activeFilter?.assignee) {\r\n            tasks = tasks.filter((task) => task.assignee === activeFilter.assignee);\r\n        }\r\n\r\n        if (activeFilter?.project) {\r\n            tasks = tasks.filter((task) => task.project === activeFilter.project);\r\n        }\r\n\r\n        if (searchQuery) {\r\n            tasks = tasks.filter((task) => task.summary.toLowerCase().includes(searchQuery)\r\n                || task.assignee.toLowerCase().includes(searchQuery)\r\n                || task.project.toLowerCase().includes(searchQuery)\r\n                || task.status.toLowerCase().includes(searchQuery));\r\n        }\r\n\r\n        return tasks;\r\n    }\r\n);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Taskbar from './Taskbar';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from './actions';\r\nimport * as selectors from './selectors';\r\nimport '../../css/Taskbar.css';\r\n\r\nclass TaskbarContainer extends React.Component {\r\n    onDragOver = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    onDrop = (event) => {\r\n        const { status, dispatch } = this.props;\r\n        const taskId = event.dataTransfer.getData('taskId');\r\n\r\n        dispatch(actions.updateTask({ id: taskId, status }));\r\n    };\r\n\r\n    render() {\r\n        const { status, tasks } = this.props;\r\n\r\n        return (\r\n            <Taskbar\r\n                onDragOver={this.onDragOver}\r\n                onDrop={this.onDrop}\r\n                status={status}\r\n                tasksData={tasks}\r\n            />);\r\n    }\r\n}\r\n\r\nTaskbarContainer.propTypes = {\r\n    dispatch: PropTypes.func,\r\n    tasks: PropTypes.array.isRequired,\r\n    status: PropTypes.string.isRequired\r\n};\r\n\r\nconst enhance = connect(\r\n    (state, props) => ({\r\n        tasks: selectors.getTasks(state, props)\r\n    })\r\n);\r\n\r\nexport default enhance(TaskbarContainer);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../../css/Filters.css';\r\n\r\nconst Search = (props) => {\r\n    const { onChange } = props;\r\n\r\n    return (\r\n        <input type=\"text\" className=\"quick-search\" onChange={(event) => onChange(event.target.value)} placeholder=\"Search...\" />\r\n    );\r\n};\r\n\r\nSearch.propTypes = {\r\n    onChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Search;","/**\r\n * Update single object item in array\r\n * @param {String} query\r\n */\r\nexport const setSearchQuery = (query) => {\r\n    return {\r\n        type: 'SEARCH:SET_QUERY',\r\n        payload: query\r\n    };\r\n};","import React from 'react';\r\nimport Search from './Search';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'underscore';\r\nimport * as actions from './actions';\r\nimport { connect } from 'react-redux';\r\nimport '../../css/Filters.css';\r\n\r\nclass SearchContainer extends React.Component {\r\n    onChange = (value) => {\r\n        const { dispatch } = this.props;\r\n\r\n        dispatch(actions.setSearchQuery(value));\r\n    }\r\n\r\n    onChangeDebounced = _.debounce(this.onChange, 200);\r\n\r\n    render() {\r\n        return (\r\n            <Search onChange={this.onChangeDebounced} />\r\n        );\r\n    }\r\n}\r\n\r\nSearchContainer.propTypes = {\r\n    dispatch: PropTypes.func.isRequired\r\n};\r\n\r\nconst enhance = connect();\r\n\r\nexport default enhance(SearchContainer);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../../css/Filters.css';\r\nimport SearchContainer from '../Search/index';\r\n\r\nconst FiltersPanel = (props) => {\r\n    const { filters, applyFilter } = props;\r\n\r\n    return (\r\n        <div className=\"filtersPanel\">\r\n            <div className=\"quick-filters-container\">\r\n                <dt>\r\n                    {'QUICK FILTERS:'}\r\n                </dt>\r\n                {\r\n                    filters.map((filter) => (\r\n                        <dd key={filter.id}>\r\n                            <button\r\n                                type=\"submit\"\r\n                                id={filter.id}\r\n                                className=\"filter-button\"\r\n                                onClick={applyFilter}\r\n                            >\r\n                                {filter.name}\r\n                            </button>\r\n                        </dd>\r\n                    ))\r\n                }\r\n            </div>\r\n            <div className=\"quick-search-container\">\r\n                <SearchContainer />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nFiltersPanel.propTypes = {\r\n    filters: PropTypes.array.isRequired,\r\n    applyFilter: PropTypes.func.isRequired\r\n};\r\n\r\nexport default FiltersPanel;","import * as _ from 'underscore';\r\nimport { createSelectorCreator, defaultMemoize } from 'reselect';\r\n\r\nexport const createDeepEqualSelector = createSelectorCreator(\r\n    defaultMemoize,\r\n    _.isEqual\r\n);","import * as reduxUtil from '../../../../utils/redux.util';\r\n\r\nconst getFiltersMemo = (state) => state.filters;\r\n\r\nexport const getFilters = reduxUtil.createDeepEqualSelector(\r\n    [getFiltersMemo],\r\n    (filters) => filters\r\n);","\r\n/**\r\n * @param {String} filterId\r\n */\r\nexport const setActiveFilter = (filterId) => {\r\n    return {\r\n        type: 'FILTERS:SET_ACTIVE',\r\n        payload: filterId\r\n    };\r\n};","import React from 'react';\r\nimport FiltersPanel from './Filters';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport * as selectors from './selectors';\r\nimport * as actions from './actions';\r\n\r\nclass FiltersContainer extends React.Component {\r\n    applyFilter = (event) => {\r\n        event.preventDefault();\r\n\r\n        const { dispatch } = this.props;\r\n\r\n        dispatch(actions.setActiveFilter(event.target.id));\r\n    }\r\n\r\n    render() {\r\n        const { filters } = this.props;\r\n\r\n        return (\r\n            <FiltersPanel\r\n                filters={filters}\r\n                applyFilter={this.applyFilter}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nFiltersContainer.propTypes = {\r\n    dispatch: PropTypes.func,\r\n    filters: PropTypes.array.isRequired\r\n};\r\n\r\nconst enhance = connect(\r\n    (state) => ({\r\n        filters: selectors.getFilters(state)\r\n    })\r\n);\r\n\r\nexport default enhance(FiltersContainer);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport '../../css/Sidebar.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    small: {\r\n        width: theme.spacing(3),\r\n        height: theme.spacing(3)\r\n    },\r\n    medium: {\r\n        width: theme.spacing(4),\r\n        height: theme.spacing(4)\r\n    },\r\n    large: {\r\n        width: theme.spacing(7),\r\n        height: theme.spacing(7)\r\n    }\r\n}));\r\n\r\nconst Sidebar = (props) => {\r\n    const { closeSidebar, isVisible, task } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Drawer anchor=\"right\" open={isVisible} onClose={closeSidebar}>\r\n                <div className=\"sidebar\">\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                id=\"standard-basic\"\r\n                                defaultValue={task.summary}\r\n                                label={task.id}\r\n                                fullWidth\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Avatar\r\n                                                alt=\"Remy Sharp\"\r\n                                                src=\"https://image.flaticon.com/icons/png/512/2628/2628496.png\"\r\n                                                className={classes.medium}\r\n                                            />\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                disabled\r\n                                defaultValue={task.status}\r\n                                InputProps={{\r\n                                    startAdornment: <InputAdornment position=\"start\">{'Status:'}</InputAdornment>\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                disabled\r\n                                defaultValue={task.assignee}\r\n                                InputProps={{\r\n                                    startAdornment: (<InputAdornment position=\"start\">\r\n                                        {'Assignee:'}\r\n                                        <Avatar alt=\"Remy Sharp\" src={task.img} className={classes.small} />\r\n                                    </InputAdornment>)\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                disabled\r\n                                defaultValue={task.priority}\r\n                                InputProps={{\r\n                                    startAdornment: <InputAdornment position=\"start\">{'Priority:'}</InputAdornment>\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                disabled\r\n                                defaultValue={task.project}\r\n                                InputProps={{\r\n                                    startAdornment: <InputAdornment position=\"start\">{'Project:'}</InputAdornment>\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                id=\"outlined-multiline-static\"\r\n                                label=\"Description\"\r\n                                multiline\r\n                                fullWidth\r\n                                // rows={4}\r\n                                defaultValue={task.description}\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Drawer>\r\n        </div>\r\n    );\r\n};\r\n\r\nSidebar.propTypes = {\r\n    closeSidebar: PropTypes.func.isRequired,\r\n    task: PropTypes.object.isRequired,\r\n    isVisible: PropTypes.bool.isRequired,\r\n    isLoading: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default Sidebar;","import * as reduxUtil from '../../../../utils/redux.util';\r\n\r\nconst getSidebarVisibilityMemo = (state) => state.sidebar.visible;\r\nconst getSidebarLoadingMemo = (state) => state.sidebar.loading;\r\nconst getSidebarTaskMemo = (state) => {\r\n    return state.sidebar.taskId\r\n        ? state.tasks.find((task) => task.id === state.sidebar.taskId)\r\n        : state.sidebar.defaultTaskData;\r\n};\r\n\r\nexport const getVisibilityStatus = reduxUtil.createDeepEqualSelector(\r\n    [getSidebarVisibilityMemo],\r\n    (isVisible) => isVisible\r\n);\r\n\r\nexport const getSidebarLoading = reduxUtil.createDeepEqualSelector(\r\n    [getSidebarLoadingMemo],\r\n    (loading) => loading\r\n);\r\n\r\nexport const getSidebarTask = reduxUtil.createDeepEqualSelector(\r\n    [getSidebarTaskMemo],\r\n    (task) => task\r\n);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Sidebar from './Sidebar';\r\nimport { connect } from 'react-redux';\r\nimport * as commonActions from '../../commonActions';\r\nimport * as selectors from './selectors';\r\nimport '../../css/Filters.css';\r\n\r\nclass SidebarContainer extends React.Component {\r\n    closeSidebar = () => {\r\n        const { dispatch } = this.props;\r\n\r\n        dispatch(commonActions.setSidebarVisibility(false));\r\n    }\r\n\r\n    render() {\r\n        const { isLoading, isVisible, task } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <Sidebar\r\n                    closeSidebar={this.closeSidebar}\r\n                    isVisible={isVisible}\r\n                    isLoading={isLoading}\r\n                    task={task}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSidebarContainer.propTypes = {\r\n    dispatch: PropTypes.func.isRequired,\r\n    isVisible: PropTypes.bool.isRequired,\r\n    isLoading: PropTypes.bool.isRequired,\r\n    task: PropTypes.object.isRequired\r\n};\r\n\r\nconst enhance = connect((state) => ({\r\n    isVisible: selectors.getVisibilityStatus(state),\r\n    isLoading: selectors.getSidebarLoading(state),\r\n    task: selectors.getSidebarTask(state)\r\n}));\r\n\r\nexport default enhance(SidebarContainer);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TaskbarContainer from './components/Taskbar/index';\r\nimport './css/Board.css';\r\nimport FiltersContainer from './components/Filters/index';\r\nimport SidebarContainer from './components/Sidebar/index';\r\n\r\nconst Board = (props) => {\r\n    const { columnNames } = props;\r\n\r\n    return (\r\n        <div className=\"board\">\r\n            <SidebarContainer />\r\n            <FiltersContainer />\r\n            <div className=\"board-taskbar-container\">\r\n                {\r\n                    columnNames.map((columnName) => (\r\n                        <TaskbarContainer\r\n                            key={columnName}\r\n                            status={columnName}\r\n                        />))\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nBoard.propTypes = {\r\n    columnNames: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Board;","/**\r\n * Re-write related store\r\n * @param {Array.<Object>} taskbarData\r\n */\r\nexport const updateTaskbar = (taskbarData) => {\r\n    return {\r\n        type: 'TASKBAR:UPDATE_ALL',\r\n        payload: taskbarData\r\n    };\r\n};\r\n\r\n/**\r\n * Re-write related store\r\n * @param {Array.<Object>} tasks\r\n */\r\nexport const updateTasksAll = (tasks) => {\r\n    return {\r\n        type: 'TASKS:UPDATE_ALL',\r\n        payload: tasks\r\n    };\r\n};\r\n\r\n/**\r\n * Re-write related store\r\n * @param {Array.<Object>} filters\r\n */\r\nexport const updateFilters = (filters) => {\r\n    return {\r\n        type: 'FILTERS:SET',\r\n        payload: filters\r\n    };\r\n};","import * as reduxUtil from '../../utils/redux.util';\r\n\r\nconst getColumnNamesMemo = (state) => state.taskbar;\r\n\r\nexport const getColumnNames = reduxUtil.createDeepEqualSelector(\r\n    [getColumnNamesMemo],\r\n    (taskbar) => taskbar.map(\r\n        (taskbarItem) => taskbarItem.columnName\r\n    )\r\n);","export const tasksData = [\r\n    {\r\n        id: 'MJ-1',\r\n        summary: 'Learn React',\r\n        assignee: 'None',\r\n        status: 'To Do',\r\n        project: 'Education',\r\n        priority: 'High',\r\n        img: 'https://image.flaticon.com/icons/svg/2731/2731461.svg',\r\n        description: `1. Open JIRA MJ-1\\n`\r\n            + `2. Enter \"Education\"\\n`\r\n            + `3. Check if only education tasks are displayed\\n`\r\n            + `\\n`\r\n            + `AR: Something wrong happened\\n`\r\n            + `ER: Nothing wrong happened\\n`\r\n            + `\\n`\r\n            + `Devices:\\n`\r\n            + ` - Desktop # Win10 # Chrome\\n`\r\n            + ` - iPhone X # iOS10.3.2 # Safari`\r\n    },\r\n    {\r\n        id: 'MJ-2',\r\n        summary: 'Learn Redux',\r\n        assignee: 'Konstantin',\r\n        status: 'To Do',\r\n        project: 'Education',\r\n        priority: 'High',\r\n        img: 'https://image.flaticon.com/icons/svg/2714/2714068.svg',\r\n        description: `1. Open JIRA MJ-1\\n`\r\n            + `2. Enter \"Education\"\\n`\r\n            + `3. Check if only education tasks are displayed\\n`\r\n            + `\\n`\r\n            + `AR: Something wrong happened\\n`\r\n            + `ER: Nothing wrong happened\\n`\r\n            + `\\n`\r\n            + `Devices:\\n`\r\n            + ` - Desktop # Win10 # Chrome\\n`\r\n            + ` - iPhone X # iOS10.3.2 # Safari`\r\n    },\r\n    {\r\n        id: 'MJ-3',\r\n        summary: 'Log time',\r\n        assignee: 'Diana',\r\n        status: 'To Do',\r\n        project: 'Routine',\r\n        priority: 'Medium',\r\n        img: 'https://image.flaticon.com/icons/svg/145/145852.svg',\r\n        description: `1. Open JIRA MJ-1\\n`\r\n            + `2. Enter \"Education\"\\n`\r\n            + `3. Check if only education tasks are displayed\\n`\r\n            + `\\n`\r\n            + `AR: Something wrong happened\\n`\r\n            + `ER: Nothing wrong happened\\n`\r\n            + `\\n`\r\n            + `Devices:\\n`\r\n            + ` - Desktop # Win10 # Chrome\\n`\r\n            + ` - iPhone X # iOS10.3.2 # Safari`\r\n    },\r\n    {\r\n        id: 'MJ-4',\r\n        summary: 'Create mini-jira',\r\n        assignee: 'Artem',\r\n        status: 'To Do',\r\n        project: 'Education',\r\n        priority: 'Urgent',\r\n        img: 'https://image.flaticon.com/icons/svg/145/145843.svg',\r\n        description: `1. Open JIRA MJ-1\\n`\r\n            + `2. Enter \"Education\"\\n`\r\n            + `3. Check if only education tasks are displayed\\n`\r\n            + `\\n`\r\n            + `AR: Something wrong happened\\n`\r\n            + `ER: Nothing wrong happened\\n`\r\n            + `\\n`\r\n            + `Devices:\\n`\r\n            + ` - Desktop # Win10 # Chrome\\n`\r\n            + ` - iPhone X # iOS10.3.2 # Safari`\r\n    },\r\n    {\r\n        id: 'MJ-5',\r\n        summary: 'Feed the cat',\r\n        assignee: 'Julia',\r\n        status: 'To Do',\r\n        project: 'Ungreatful tasks',\r\n        priority: 'High',\r\n        img: 'https://image.flaticon.com/icons/svg/2741/2741163.svg',\r\n        description: `1. Open JIRA MJ-1\\n`\r\n            + `2. Enter \"Education\"\\n`\r\n            + `3. Check if only education tasks are displayed\\n`\r\n            + `\\n`\r\n            + `AR: Something wrong happened\\n`\r\n            + `ER: Nothing wrong happened\\n`\r\n            + `\\n`\r\n            + `Devices:\\n`\r\n            + ` - Desktop # Win10 # Chrome\\n`\r\n            + ` - iPhone X # iOS10.3.2 # Safari`\r\n    },\r\n    {\r\n        id: 'MJ-6',\r\n        summary: 'Play games',\r\n        assignee: 'Eugene',\r\n        status: 'To Do',\r\n        project: 'Recreation',\r\n        priority: 'Low',\r\n        img: 'https://image.flaticon.com/icons/svg/2741/2741111.svg',\r\n        description: `1. Open JIRA MJ-1\\n`\r\n            + `2. Enter \"Education\"\\n`\r\n            + `3. Check if only education tasks are displayed\\n`\r\n            + `\\n`\r\n            + `AR: Something wrong happened\\n`\r\n            + `ER: Nothing wrong happened\\n`\r\n            + `\\n`\r\n            + `Devices:\\n`\r\n            + ` - Desktop # Win10 # Chrome\\n`\r\n            + ` - iPhone X # iOS10.3.2 # Safari`\r\n    },\r\n    {\r\n        id: 'MJ-7',\r\n        summary: 'Do sport',\r\n        assignee: 'Lera',\r\n        status: 'To Do',\r\n        project: 'Health',\r\n        priority: 'Medium',\r\n        img: 'https://image.flaticon.com/icons/svg/163/163802.svg',\r\n        description: `1. Open JIRA MJ-1\\n`\r\n            + `2. Enter \"Education\"\\n`\r\n            + `3. Check if only education tasks are displayed\\n`\r\n            + `\\n`\r\n            + `AR: Something wrong happened\\n`\r\n            + `ER: Nothing wrong happened\\n`\r\n            + `\\n`\r\n            + `Devices:\\n`\r\n            + ` - Desktop # Win10 # Chrome\\n`\r\n            + ` - iPhone X # iOS10.3.2 # Safari`\r\n    },\r\n    {\r\n        id: 'MJ-8',\r\n        summary: 'Cook',\r\n        assignee: 'Yuri',\r\n        status: 'To Do',\r\n        project: 'Routine',\r\n        priority: 'Low',\r\n        img: 'https://image.flaticon.com/icons/svg/163/163804.svg',\r\n        description: `1. Open JIRA MJ-1\\n`\r\n            + `2. Enter \"Education\"\\n`\r\n            + `3. Check if only education tasks are displayed\\n`\r\n            + `\\n`\r\n            + `AR: Something wrong happened\\n`\r\n            + `ER: Nothing wrong happened\\n`\r\n            + `\\n`\r\n            + `Devices:\\n`\r\n            + ` - Desktop # Win10 # Chrome\\n`\r\n            + ` - iPhone X # iOS10.3.2 # Safari`\r\n    }\r\n];","export const taskbarConfig = [\r\n    {\r\n        columnName: 'To Do'\r\n    },\r\n    {\r\n        columnName: 'In Progress'\r\n    },\r\n    {\r\n        columnName: 'Ready for testing'\r\n    },\r\n    {\r\n        columnName: 'Completed'\r\n    }\r\n];","export const filtersConfig = [\r\n    {\r\n        id: 'all-filter',\r\n        name: 'All',\r\n        project: '',\r\n        assignee: '',\r\n        summary: ''\r\n    },\r\n    {\r\n        id: 'education-filter',\r\n        name: 'Education',\r\n        project: 'Education',\r\n        assignee: '',\r\n        summary: ''\r\n    },\r\n    {\r\n        id: 'routine-filter',\r\n        name: 'Routine',\r\n        project: 'Routine',\r\n        assignee: '',\r\n        summary: ''\r\n    },\r\n    {\r\n        id: 'recreation-filter',\r\n        name: 'Recreation',\r\n        project: 'Recreation',\r\n        assignee: '',\r\n        summary: ''\r\n    }\r\n];","import { tasksData } from '../data/tasksData';\r\nimport { taskbarConfig } from '../config/taskbar';\r\nimport { filtersConfig } from '../config/filters';\r\n\r\n// Class developed in order to emulate async server calls\r\nclass FakeServerUtil {\r\n    constructor() {\r\n        this.tasksData = tasksData;\r\n        this.taskbarConfig = taskbarConfig;\r\n        this.filtersConfig = filtersConfig;\r\n    }\r\n\r\n    getTasksData() {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(this.tasksData);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    getTaskData(taskId) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                taskId\r\n                    ? resolve(this.tasksData.find((task) => task.id === taskId))\r\n                    : reject(null);\r\n            }, 4000);\r\n        });\r\n    }\r\n\r\n    getTaskbarConfig() {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(this.taskbarConfig);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    getFiltersConfig() {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(this.filtersConfig);\r\n            }, 100);\r\n        });\r\n    }\r\n}\r\n\r\nexport const fakeServerUtil = new FakeServerUtil();","import React from 'react';\r\nimport Board from './Board';\r\nimport PropTypes from 'prop-types';\r\nimport * as actions from './actions';\r\nimport * as selectors from './selectors';\r\nimport { fakeServerUtil } from '../../utils/fakeServer.util';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\n\r\nclass BoardContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.updateTaskbar();\r\n        this.updateTasks();\r\n        this.updateFilters();\r\n    }\r\n\r\n    async updateTaskbar() {\r\n        const { dispatch } = this.props;\r\n        const taskbarData = await fakeServerUtil.getTaskbarConfig();\r\n\r\n        dispatch(actions.updateTaskbar(taskbarData));\r\n    }\r\n\r\n    async updateTasks() {\r\n        const { dispatch } = this.props;\r\n        const tasksData = await fakeServerUtil.getTasksData();\r\n\r\n        dispatch(actions.updateTasksAll(tasksData));\r\n    }\r\n\r\n    async updateFilters() {\r\n        const { dispatch } = this.props;\r\n        const filtersData = await fakeServerUtil.getFiltersConfig();\r\n\r\n        dispatch(actions.updateFilters(filtersData));\r\n    }\r\n\r\n    render() {\r\n        const { columnNames } = this.props;\r\n\r\n        return (\r\n            <Board columnNames={columnNames} />\r\n        );\r\n    }\r\n}\r\n\r\nBoardContainer.propTypes = {\r\n    dispatch: PropTypes.func,\r\n    columnNames: PropTypes.array.isRequired\r\n};\r\n\r\nconst enhance = compose(\r\n    connect(\r\n        (state) => ({\r\n            columnNames: selectors.getColumnNames(state)\r\n        })\r\n    )\r\n);\r\n\r\nexport default enhance(BoardContainer);","import { produce } from 'immer';\r\n\r\nconst defaultState = {\r\n    taskbar: [],\r\n    tasks: [],\r\n    filters: [],\r\n    searchQuery: '',\r\n    sidebar: {\r\n        visible: false,\r\n        taskId: '',\r\n        loading: true,\r\n        defaultTaskData: {\r\n            id: '',\r\n            summary: '',\r\n            assignee: '',\r\n            status: '',\r\n            project: '',\r\n            img: '',\r\n            desciption: ''\r\n        }\r\n    }\r\n};\r\n\r\nconst boardReducer = (state = defaultState, action) => produce(state, (draftState) => {\r\n    switch (action.type) {\r\n        case 'TASKBAR:UPDATE_ALL': {\r\n            Object.assign(draftState, {\r\n                taskbar: action.payload\r\n            });\r\n\r\n            break;\r\n        }\r\n        case 'TASKS:UPDATE_ALL': {\r\n            Object.assign(draftState, {\r\n                tasks: action.payload\r\n            });\r\n\r\n            break;\r\n        }\r\n        case 'TASKS:UPDATE_ITEM': {\r\n            const updateItem = draftState.tasks.find((task) => task.id === action.payload.id);\r\n\r\n            Object.assign(updateItem, action.payload);\r\n\r\n            break;\r\n        }\r\n        case 'FILTERS:SET': {\r\n            action.payload.forEach((filter) => {\r\n                filter.active = false;\r\n            });\r\n            Object.assign(draftState, {\r\n                filters: action.payload\r\n            });\r\n\r\n            break;\r\n        }\r\n        case 'FILTERS:SET_ACTIVE': {\r\n            const payLoadFilter = draftState.filters.find((filter) => filter.id === action.payload);\r\n\r\n            draftState.filters.forEach((filter) => {\r\n                filter.active = false;\r\n            });\r\n            payLoadFilter.active = true;\r\n\r\n            break;\r\n        }\r\n        case 'SEARCH:SET_QUERY': {\r\n            draftState.searchQuery = action.payload;\r\n\r\n            break;\r\n        }\r\n        case 'SIDEBAR:SET_VISIBILITY': {\r\n            draftState.sidebar.visible = action.payload;\r\n\r\n            break;\r\n        }\r\n        case 'SIDEBAR:SET_TASKID': {\r\n            draftState.sidebar.taskId = action.payload;\r\n\r\n            break;\r\n        }\r\n    }\r\n});\r\n\r\nexport default boardReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport BoardContainer from './components/Board/index';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport boardReducers from './components/Board/reducers/board';\r\n\r\nconst boardStore = createStore(\r\n    boardReducers,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nReactDOM.render(\r\n    <Provider store={boardStore}>\r\n        <BoardContainer />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}