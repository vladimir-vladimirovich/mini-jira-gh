{"version":3,"sources":["components/Board/components/Task/Task.js","components/Board/components/Task/index.js","components/Board/components/Taskbar/Taskbar.js","components/Board/components/Taskbar/actions.js","components/Board/components/Taskbar/selectors.js","components/Board/components/Taskbar/index.js","components/Board/components/Search/Search.js","components/Board/components/Search/actions.js","components/Board/components/Search/index.js","components/Board/components/Filters/Filters.js","utils/redux.util.js","components/Board/components/Filters/selectors.js","components/Board/components/Filters/actions.js","components/Board/components/Filters/index.js","components/Board/Board.js","data/tasksData.js","config/taskbar.js","config/filters.js","utils/fakeServer.util.js","components/Board/actions.js","components/Board/selectors.js","components/Board/index.js","components/Board/reducers/board.js","index.js"],"names":["Task","props","id","summary","assignee","project","img","onDragStart","className","draggable","src","alt","TaskContainer","event","dataTransfer","setData","this","React","Component","Taskbar","status","onDragOver","onDrop","tasksData","map","task","key","updateTask","properties","type","payload","getTasks","createSelector","state","tasks","filter","filters","find","active","searchQuery","activeFilter","toLowerCase","indexOf","TaskbarContainer","preventDefault","dispatch","taskId","getData","actions","enhance","connect","selectors","Search","onChange","target","value","placeholder","setSearchQuery","query","SearchContainer","onChangeDebounced","_","debounce","FiltersPanel","applyFilter","onClick","name","createDeepEqualSelector","createSelectorCreator","defaultMemoize","getFilters","reduxUtil","setActiveFilter","filterId","FiltersContainer","Board","columnNames","columnName","taskbarConfig","filtersConfig","fakeServerUtil","Promise","resolve","setTimeout","updateTaskbar","taskbarData","getColumnNames","taskbar","taskbarItem","BoardContainer","updateTasks","updateFilters","getTaskbarConfig","getTasksData","getFiltersConfig","filtersData","compose","defaultState","boardReducer","action","produce","draftState","Object","assign","updateItem","forEach","payLoadFilter","boardStore","createStore","boardReducers","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.f15df03c.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../../css/Task.css';\r\n\r\nconst Task = (props) => {\r\n    const { id, summary, assignee, project, img, onDragStart } = props;\r\n\r\n    return (\r\n        <div\r\n            className=\"task\"\r\n            draggable=\"true\"\r\n            onDragStart={onDragStart}\r\n        >\r\n            <ul className=\"list\">\r\n                <li>{id}</li>\r\n                <li>{summary}</li>\r\n                <li>{assignee}</li>\r\n                <li>\r\n                    <div className=\"item-status-div\">\r\n                        <p>{project}</p>\r\n                    </div>\r\n                </li>\r\n                <li>\r\n                    <img\r\n                        className=\"image\"\r\n                        src={img}\r\n                        alt=\"\"\r\n                    />\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nTask.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    assignee: PropTypes.string.isRequired,\r\n    project: PropTypes.string.isRequired,\r\n    img: PropTypes.string,\r\n    onDragStart: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Task;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Task from './Task';\r\n\r\nclass TaskContainer extends React.Component {\r\n    onDragStart = (event) => {\r\n        event.dataTransfer.setData('taskId', this.props.id);\r\n    }\r\n\r\n    render() {\r\n        const { id, summary, assignee, project, img } = this.props;\r\n\r\n        return (\r\n            <Task\r\n                id={id}\r\n                summary={summary}\r\n                assignee={assignee}\r\n                project={project}\r\n                img={img}\r\n                onDragStart={this.onDragStart}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nTaskContainer.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    assignee: PropTypes.string.isRequired,\r\n    project: PropTypes.string.isRequired,\r\n    img: PropTypes.string\r\n};\r\n\r\nexport default TaskContainer;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TaskContainer from '../Task/index';\r\nimport '../../css/Taskbar.css';\r\n\r\nconst Taskbar = (props) => {\r\n    const { status, onDragOver, onDrop, tasksData } = props;\r\n\r\n    return (\r\n        <div className=\"taskbar\">\r\n            <div className=\"taskbar-title\">\r\n                <p>{status}</p>\r\n            </div>\r\n            <div\r\n                className=\"taskbar-list\"\r\n                onDragOver={onDragOver}\r\n                onDrop={onDrop}\r\n            >\r\n                {\r\n                    tasksData\r\n                        .map(task => (\r\n                            <TaskContainer\r\n                                key={task.id}\r\n                                id={task.id}\r\n                                summary={task.summary}\r\n                                assignee={task.assignee}\r\n                                status={task.status}\r\n                                project={task.project}\r\n                                img={task.img}\r\n                            />))\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nTaskbar.propTypes = {\r\n    status: PropTypes.string.isRequired,\r\n    onDragOver: PropTypes.func.isRequired,\r\n    onDrop: PropTypes.func.isRequired,\r\n    tasksData: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Taskbar;","/**\r\n * Update single object item in array\r\n * @param {Object} properties\r\n */\r\nexport const updateTask = (properties) => {\r\n    return {\r\n        type: 'TASKS:UPDATE_ITEM',\r\n        payload: {\r\n            ...properties\r\n        }\r\n    };\r\n};","import { createSelector } from 'reselect';\r\n\r\nconst getTasksMemo = (state, props) => state.tasks.filter((task) => task.status === props.status);\r\nconst getActiveFilterMemo = (state) => state.filters.find((filter) => filter.active);\r\nconst getSearchQueryMemo = (state) => state.searchQuery;\r\n\r\nexport const getTasks = createSelector(\r\n    [\r\n        getTasksMemo,\r\n        getActiveFilterMemo,\r\n        getSearchQueryMemo\r\n    ],\r\n    (tasks, activeFilter, searchQuery) => {\r\n        if (activeFilter) {\r\n            if (activeFilter.assignee) {\r\n                tasks = tasks.filter((task) => task.assignee === activeFilter.assignee);\r\n            }\r\n            if (activeFilter.project) {\r\n                tasks = tasks.filter((task) => task.project === activeFilter.project);\r\n            }\r\n        }\r\n\r\n        if (searchQuery) {\r\n            tasks = tasks.filter((task) => {\r\n                return task.summary.toLowerCase().indexOf(searchQuery.toLowerCase()) >= 0\r\n                || task.assignee.toLowerCase().indexOf(searchQuery.toLowerCase()) >= 0\r\n                || task.project.toLowerCase().indexOf(searchQuery.toLowerCase()) >= 0\r\n                || task.status.toLowerCase().indexOf(searchQuery.toLowerCase()) >= 0;\r\n            });\r\n        }\r\n\r\n        return tasks;\r\n    }\r\n);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Taskbar from './Taskbar';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from './actions';\r\nimport * as selectors from './selectors';\r\nimport '../../css/Taskbar.css';\r\n\r\nclass TaskbarContainer extends React.Component {\r\n    onDragOver = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    onDrop = (event) => {\r\n        const { status, dispatch } = this.props;\r\n        const taskId = event.dataTransfer.getData('taskId');\r\n\r\n        dispatch(actions.updateTask({ id: taskId, status }));\r\n    };\r\n\r\n    render() {\r\n        const { status, tasks } = this.props;\r\n\r\n        return (\r\n            <Taskbar\r\n                onDragOver={this.onDragOver}\r\n                onDrop={this.onDrop}\r\n                status={status}\r\n                tasksData={tasks}\r\n            />);\r\n    }\r\n}\r\n\r\nTaskbarContainer.propTypes = {\r\n    dispatch: PropTypes.func,\r\n    tasks: PropTypes.array.isRequired,\r\n    status: PropTypes.string.isRequired\r\n};\r\n\r\nconst enhance = connect(\r\n    (state, props) => ({\r\n        tasks: selectors.getTasks(state, props)\r\n    })\r\n);\r\n\r\nexport default enhance(TaskbarContainer);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../../css/Filters.css';\r\n\r\nconst Search = (props) => {\r\n    const { onChange } = props;\r\n\r\n    return (\r\n        <input type=\"text\" className=\"quick-search\" onChange={(event) => onChange(event.target.value)} placeholder=\"Search...\" />\r\n    );\r\n};\r\n\r\nSearch.propTypes = {\r\n    onChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Search;","/**\r\n * Update single object item in array\r\n * @param {Object} properties\r\n */\r\nexport const setSearchQuery = (query) => {\r\n    return {\r\n        type: 'SEARCH:SET_QUERY',\r\n        payload: query\r\n    };\r\n};","import React from 'react';\r\nimport Search from './Search';\r\nimport * as actions from './actions';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport '../../css/Filters.css';\r\nimport _ from 'underscore';\r\n\r\nclass SearchContainer extends React.Component {\r\n    onChange = (value) => {\r\n        const { dispatch } = this.props;\r\n\r\n        dispatch(actions.setSearchQuery(value));\r\n    }\r\n\r\n    onChangeDebounced = _.debounce(this.onChange, 200);\r\n\r\n    render() {\r\n        return (\r\n            <Search onChange={this.onChangeDebounced} />\r\n        );\r\n    }\r\n}\r\n\r\nSearchContainer.propTypes = {\r\n    dispatch: PropTypes.func.isRequired\r\n};\r\n\r\nconst enhance = connect();\r\n\r\nexport default enhance(SearchContainer);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../../css/Filters.css';\r\nimport SearchContainer from '../Search/index';\r\n\r\nconst FiltersPanel = (props) => {\r\n    const { filters, applyFilter } = props;\r\n\r\n    return (\r\n        <div className=\"filtersPanel\">\r\n            <div className=\"quick-filters-container\">\r\n                <dt>\r\n                    {'QUICK FILTERS:'}\r\n                </dt>\r\n                {\r\n                    filters.map((filter) => (\r\n                        <dd key={filter.id}>\r\n                            <button\r\n                                type=\"submit\"\r\n                                id={filter.id}\r\n                                className=\"filter-button\"\r\n                                onClick={applyFilter}\r\n                            >\r\n                                {filter.name}\r\n                            </button>\r\n                        </dd>\r\n                    ))\r\n                }\r\n            </div>\r\n            <div className=\"quick-search-container\">\r\n                <SearchContainer />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nFiltersPanel.propTypes = {\r\n    filters: PropTypes.array.isRequired,\r\n    applyFilter: PropTypes.func.isRequired\r\n};\r\n\r\nexport default FiltersPanel;","import * as _ from 'underscore';\r\nimport { createSelectorCreator, defaultMemoize } from 'reselect';\r\n\r\nexport const createDeepEqualSelector = createSelectorCreator(\r\n    defaultMemoize,\r\n    _.isEqual\r\n);","import * as reduxUtil from '../../../../utils/redux.util';\r\n\r\nconst getFiltersMemo = (state) => state.filters;\r\n\r\nexport const getFilters = reduxUtil.createDeepEqualSelector(\r\n    [getFiltersMemo],\r\n    (filters) => filters\r\n);","export const setActiveFilter = (filterId) => {\r\n    return {\r\n        type: 'FILTERS:SET_ACTIVE',\r\n        payload: filterId\r\n    };\r\n};","import React from 'react';\r\nimport FiltersPanel from './Filters';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport * as selectors from './selectors';\r\nimport * as actions from './actions';\r\n\r\nclass FiltersContainer extends React.Component {\r\n    applyFilter = (event) => {\r\n        event.preventDefault();\r\n\r\n        const { dispatch } = this.props;\r\n\r\n        dispatch(actions.setActiveFilter(event.target.id));\r\n    }\r\n\r\n    render() {\r\n        const { filters } = this.props;\r\n\r\n        return (\r\n            <FiltersPanel\r\n                filters={filters}\r\n                applyFilter={this.applyFilter}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nFiltersContainer.propTypes = {\r\n    dispatch: PropTypes.func,\r\n    filters: PropTypes.array.isRequired\r\n};\r\n\r\nconst enhance = connect(\r\n    (state) => ({\r\n        filters: selectors.getFilters(state)\r\n    })\r\n);\r\n\r\nexport default enhance(FiltersContainer);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TaskbarContainer from './components/Taskbar/index';\r\nimport './css/Board.css';\r\nimport FiltersContainer from './components/Filters/index';\r\n\r\nconst Board = (props) => {\r\n    const { columnNames } = props;\r\n\r\n    return (\r\n        <div className=\"board\">\r\n            <FiltersContainer />\r\n            <div className=\"board-taskbar-container\">\r\n                {\r\n                    columnNames.map((columnName) => (\r\n                        <TaskbarContainer\r\n                            key={columnName}\r\n                            status={columnName}\r\n                        />))\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nBoard.propTypes = {\r\n    columnNames: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Board;","export const tasksData = [\r\n    {\r\n        id: 'MJ-1',\r\n        summary: 'Learn React',\r\n        assignee: 'None',\r\n        status: 'To Do',\r\n        project: 'Education',\r\n        img: 'https://image.flaticon.com/icons/svg/2731/2731461.svg'\r\n    },\r\n    {\r\n        id: 'MJ-2',\r\n        summary: 'Learn Redux',\r\n        assignee: 'Konstantin',\r\n        status: 'To Do',\r\n        project: 'Education',\r\n        img: 'https://image.flaticon.com/icons/svg/2714/2714068.svg'\r\n    },\r\n    {\r\n        id: 'MJ-3',\r\n        summary: 'Log time',\r\n        assignee: 'Diana',\r\n        status: 'To Do',\r\n        project: 'Routine',\r\n        img: 'https://image.flaticon.com/icons/svg/145/145852.svg'\r\n    },\r\n    {\r\n        id: 'MJ-4',\r\n        summary: 'Create mini-jira',\r\n        assignee: 'Artem',\r\n        status: 'To Do',\r\n        project: 'Education',\r\n        img: 'https://image.flaticon.com/icons/svg/145/145843.svg'\r\n    },\r\n    {\r\n        id: 'MJ-5',\r\n        summary: 'Feed the cat',\r\n        assignee: 'Julia',\r\n        status: 'To Do',\r\n        project: 'Ungreatful tasks',\r\n        img: 'https://image.flaticon.com/icons/svg/2741/2741163.svg'\r\n    },\r\n    {\r\n        id: 'MJ-6',\r\n        summary: 'Play games',\r\n        assignee: 'Eugene',\r\n        status: 'To Do',\r\n        project: 'Recreation',\r\n        img: 'https://image.flaticon.com/icons/svg/2741/2741111.svg'\r\n    },\r\n    {\r\n        id: 'MJ-7',\r\n        summary: 'Do sport',\r\n        assignee: 'Lera',\r\n        status: 'To Do',\r\n        project: 'Health',\r\n        img: 'https://image.flaticon.com/icons/svg/163/163802.svg'\r\n    },\r\n    {\r\n        id: 'MJ-8',\r\n        summary: 'Cook',\r\n        assignee: 'Yuri',\r\n        status: 'To Do',\r\n        project: 'Routine',\r\n        img: 'https://image.flaticon.com/icons/svg/163/163804.svg'\r\n    }\r\n];","export const taskbarConfig = [\r\n    {\r\n        columnName: 'To Do'\r\n    },\r\n    {\r\n        columnName: 'In Progress'\r\n    },\r\n    {\r\n        columnName: 'Ready for testing'\r\n    },\r\n    {\r\n        columnName: 'Completed'\r\n    }\r\n];","export const filtersConfig = [\r\n    {\r\n        id: 'all-filter',\r\n        name: 'All',\r\n        project: '',\r\n        assignee: '',\r\n        summary: ''\r\n    },\r\n    {\r\n        id: 'education-filter',\r\n        name: 'Education',\r\n        project: 'Education',\r\n        assignee: '',\r\n        summary: ''\r\n    },\r\n    {\r\n        id: 'routine-filter',\r\n        name: 'Routine',\r\n        project: 'Routine',\r\n        assignee: '',\r\n        summary: ''\r\n    },\r\n    {\r\n        id: 'recreation-filter',\r\n        name: 'Recreation',\r\n        project: 'Recreation',\r\n        assignee: '',\r\n        summary: ''\r\n    }\r\n];","import { tasksData } from '../data/tasksData';\r\nimport { taskbarConfig } from '../config/taskbar';\r\nimport { filtersConfig } from '../config/filters';\r\n\r\n// Class developed in order to emulate async server calls\r\nclass FakeServerUtil {\r\n    constructor() {\r\n        this.tasksData = tasksData;\r\n        this.taskbarConfig = taskbarConfig;\r\n        this.filtersConfig = filtersConfig;\r\n    }\r\n\r\n    getTasksData() {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(this.tasksData);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    getTaskbarConfig() {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(this.taskbarConfig);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    getFiltersConfig() {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(this.filtersConfig);\r\n            }, 100);\r\n        });\r\n    }\r\n}\r\n\r\nexport const fakeServerUtil = new FakeServerUtil();","/**\r\n * Re-write related store\r\n * @param {Array.<Object>} taskbarData\r\n */\r\nexport const updateTaskbar = (taskbarData) => {\r\n    return {\r\n        type: 'TASKBAR:UPDATE_ALL',\r\n        payload: taskbarData\r\n    };\r\n};\r\n\r\n/**\r\n * Re-write related store\r\n * @param {Array.<Object>} tasks\r\n */\r\nexport const updateTasksAll = (tasks) => {\r\n    return {\r\n        type: 'TASKS:UPDATE_ALL',\r\n        payload: tasks\r\n    };\r\n};\r\n\r\n/**\r\n * Re-write related store\r\n * @param {Array.<Object>} filters\r\n */\r\nexport const updateFilters = (filters) => {\r\n    return {\r\n        type: 'FILTERS:SET',\r\n        payload: filters\r\n    };\r\n};","import * as reduxUtil from '../../utils/redux.util';\r\n\r\n// const getColumnNamesMemo = (state) => state.taskbarReducer.taskbar;\r\nconst getColumnNamesMemo = (state) => state.taskbar;\r\n\r\nexport const getColumnNames = reduxUtil.createDeepEqualSelector(\r\n    [getColumnNamesMemo],\r\n    (taskbar) => taskbar.map(\r\n        (taskbarItem) => taskbarItem.columnName\r\n    )\r\n);","import React from 'react';\r\nimport Board from './Board';\r\nimport PropTypes from 'prop-types';\r\nimport { fakeServerUtil } from '../../utils/fakeServer.util';\r\nimport * as actions from './actions';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport * as selectors from './selectors';\r\n\r\nclass BoardContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.updateTaskbar();\r\n        this.updateTasks();\r\n        this.updateFilters();\r\n    }\r\n\r\n    async updateTaskbar() {\r\n        const { dispatch } = this.props;\r\n        const taskbarData = await fakeServerUtil.getTaskbarConfig();\r\n\r\n        dispatch(actions.updateTaskbar(taskbarData));\r\n    }\r\n\r\n    async updateTasks() {\r\n        const { dispatch } = this.props;\r\n        const tasksData = await fakeServerUtil.getTasksData();\r\n\r\n        dispatch(actions.updateTasksAll(tasksData));\r\n    }\r\n\r\n    async updateFilters() {\r\n        const { dispatch } = this.props;\r\n        const filtersData = await fakeServerUtil.getFiltersConfig();\r\n\r\n        dispatch(actions.updateFilters(filtersData));\r\n    }\r\n\r\n    render() {\r\n        const { columnNames } = this.props;\r\n\r\n        return (\r\n            <Board columnNames={columnNames} />\r\n        );\r\n    }\r\n}\r\n\r\nBoardContainer.propTypes = {\r\n    dispatch: PropTypes.func,\r\n    columnNames: PropTypes.array.isRequired\r\n};\r\n\r\nconst enhance = compose(\r\n    connect(\r\n        (state) => ({\r\n            columnNames: selectors.getColumnNames(state)\r\n        })\r\n    )\r\n);\r\n\r\nexport default enhance(BoardContainer);","import { produce } from 'immer';\r\n\r\nconst defaultState = {\r\n    taskbar: [],\r\n    tasks: [],\r\n    filters: [],\r\n    searchQuery: ''\r\n};\r\n\r\nconst boardReducer = (state = defaultState, action) => produce(state, (draftState) => {\r\n    switch (action.type) {\r\n        case 'TASKBAR:UPDATE_ALL':\r\n            Object.assign(draftState, {\r\n                taskbar: action.payload\r\n            });\r\n\r\n            break;\r\n        case 'TASKS:UPDATE_ALL':\r\n            Object.assign(draftState, {\r\n                tasks: action.payload\r\n            });\r\n\r\n            break;\r\n        case 'TASKS:UPDATE_ITEM':\r\n            const updateItem = draftState.tasks.find((task) => task.id === action.payload.id);\r\n\r\n            Object.assign(updateItem, action.payload);\r\n\r\n            break;\r\n        case 'FILTERS:SET':\r\n            action.payload.forEach((filter) => {\r\n                filter.active = false;\r\n            });\r\n            Object.assign(draftState, {\r\n                filters: action.payload\r\n            });\r\n\r\n            break;\r\n        case 'FILTERS:SET_ACTIVE':\r\n            const payLoadFilter = draftState.filters.find((filter) => filter.id === action.payload);\r\n\r\n            draftState.filters.forEach((filter) => {\r\n                filter.active = false;\r\n            });\r\n            payLoadFilter.active = true;\r\n\r\n            break;\r\n        case 'SEARCH:SET_QUERY':\r\n            draftState.searchQuery = action.payload;\r\n    }\r\n});\r\n\r\nexport default boardReducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport BoardContainer from './components/Board/index';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport boardReducers from './components/Board/reducers/board';\r\n\r\nconst boardStore = createStore(\r\n    boardReducers,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nReactDOM.render(\r\n    <Provider store={boardStore}>\r\n        <BoardContainer />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}